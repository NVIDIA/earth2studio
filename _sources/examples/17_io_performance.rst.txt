
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/17_io_performance.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_17_io_performance.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_17_io_performance.py:


IO Backend Performance
========================

Leverage different IO backends for storing inference results.

This example explores IO backends inside Earth2Studio and how they can be used to write
data to different formats / locations. The IO is a core part of any inference pipeline
and depending on the desired target, can dramatically impact performance. This example
will help navigate users through the use of different IO backend APIs in a simple
workflow.

In this example you will learn:

- Initializing, creating arrays and writing with the Zarr IO backend
- Initializing, creating arrays and writing with the NetCDF IO backend
- Initializing and writing with the Asynchronous Non-blocking Zarr IO backend
- Discussing performance implications and strategies that can be used

.. GENERATED FROM PYTHON SOURCE LINES 37-44

.. code-block:: Python

    # /// script
    # dependencies = [
    #   "earth2studio[dlwp] @ git+https://github.com/NVIDIA/earth2studio.git",
    #   "matplotlib",
    # ]
    # ///








.. GENERATED FROM PYTHON SOURCE LINES 45-50

Set Up
------
To demonstrate different IO, this example will use a simple ensemble workflow that we
will manually create ourselves. One could use the built in workflow in Earth2Studio
however, this will allow us to better understand the APIs.

.. GENERATED FROM PYTHON SOURCE LINES 52-58

We need the following components:

- Datasource: Pull data from the GFS data api :py:class:`earth2studio.data.GFS`.
- Prognostic Model: Use the built in DLWP model :py:class:`earth2studio.models.px.DLWP`.
- Perturbation Method: Use the standard Gaussian method :py:class:`earth2studio.perturbation.Gaussian`.
- IO Backends: Use a few IO Backends including :py:class:`earth2studio.io.AsyncZarrBackend`, :py:class:`earth2studio.io.NetCDF4Backend` and :py:class:`earth2studio.io.ZarrBackend`.

.. GENERATED FROM PYTHON SOURCE LINES 60-89

.. code-block:: Python


    import os

    os.makedirs("outputs", exist_ok=True)
    from dotenv import load_dotenv

    load_dotenv()  # TODO: make common example prep function

    import torch

    from earth2studio.data import GFS, DataSource, fetch_data
    from earth2studio.io import AsyncZarrBackend, IOBackend, NetCDF4Backend, ZarrBackend
    from earth2studio.models.px import DLWP, PrognosticModel
    from earth2studio.perturbation import Gaussian, Perturbation

    # Get the device
    device = torch.device("cuda" if torch.cuda.is_available() else "cpu")

    # Load the cBottle data source
    package = DLWP.load_default_package()
    model = DLWP.load_model(package)
    model = model.to(device)

    # Create the ERA5 data source
    ds = GFS()

    # Create perturbation method
    pt = Gaussian()








.. GENERATED FROM PYTHON SOURCE LINES 90-97

Creating a Simple Ensemble Workflow
-----------------------------------
Start with creating a simple ensemble inference workflow. This is essentially a
simpler version of the built in ensemble workflow :py:meth:`earth2studio.run.ensemble`.
In this case, this is for an ensemble inference workflow that will predict a 5 day
forecast for Christmas 2022. Following standard Earth2Studio practices, the function
accepts initialized prognostic, data source, io backend and perturbation method.

.. GENERATED FROM PYTHON SOURCE LINES 99-200

.. code-block:: Python


    import os
    import time
    from datetime import datetime, timedelta

    import numpy as np
    from tqdm import tqdm

    from earth2studio.utils.coords import map_coords, split_coords
    from earth2studio.utils.time import to_time_array

    times = [datetime(2022, 12, 20)]
    nsteps = 20  # Assuming 6-hour time steps


    def christmas_five_day_ensemble(
        times: list[datetime],
        nsteps: int,
        prognostic: PrognosticModel,
        data: DataSource,
        io: IOBackend,
        perturbation: Perturbation,
        nensemble: int = 8,
        device: str = "cuda",
    ) -> None:
        """Ensemble inference example"""
        # ==========================================
        # Fetch Initialization Data
        prognostic_ic = prognostic.input_coords()
        times = to_time_array(times)

        x, coords0 = fetch_data(
            source=data,
            time=times,
            variable=prognostic_ic["variable"],
            lead_time=prognostic_ic["lead_time"],
            device=device,
        )
        # ==========================================
        # ==========================================
        # Set up IO backend by pre-allocating arrays (not needed for AsyncZarrBackend)
        total_coords = prognostic.output_coords(prognostic.input_coords()).copy()
        if "batch" in total_coords:
            del total_coords["batch"]
        total_coords["time"] = times
        total_coords["lead_time"] = np.asarray(
            [
                prognostic.output_coords(prognostic.input_coords())["lead_time"] * i
                for i in range(nsteps + 1)
            ]
        ).flatten()
        total_coords.move_to_end("lead_time", last=False)
        total_coords.move_to_end("time", last=False)
        total_coords = {"ensemble": np.arange(nensemble)} | total_coords

        variables_to_save = total_coords.pop("variable")
        io.add_array(total_coords, variables_to_save)
        # ==========================================
        # ==========================================
        # Run inference
        coords = {"ensemble": np.arange(nensemble)} | coords0.copy()
        x = x.unsqueeze(0).repeat(nensemble, *([1] * x.ndim))

        # Map lat and lon if needed
        x, coords = map_coords(x, coords, prognostic_ic)

        # Perturb ensemble
        x, coords = perturbation(x, coords)

        # Create prognostic iterator
        model = prognostic.create_iterator(x, coords)

        with tqdm(
            total=nsteps + 1,
            desc="Running batch inference",
            position=1,
            leave=False,
        ) as pbar:
            for step, (x, coords) in enumerate(model):
                # Dump result to IO, split_coords separates variables to different arrays
                x, coords = map_coords(x, coords, {"variable": np.array(["t2m", "tcwv"])})
                io.write(*split_coords(x, coords))
                pbar.update(1)
                if step == nsteps:
                    break
        # ==========================================


    def get_folder_size(folder_path: str) -> int:
        """Get folder size in megabytes"""
        if os.path.isfile(folder_path):
            return os.path.getsize(folder_path) / (1024 * 1024)

        total_size = 0
        for dirpath, dirnames, filenames in os.walk(folder_path):
            for filename in filenames:
                file_path = os.path.join(dirpath, filename)
                total_size += os.path.getsize(file_path)
        return total_size / (1024 * 1024)









.. GENERATED FROM PYTHON SOURCE LINES 201-209

Local Storage Zarr IO
---------------------
As a base line, lets run the Zarr IO backend saving it to local disk.
Local IO storage is typically preferred since we can then access the data after the
inference pipeline is finished using standard libraries.
Chunking play an important role on performance, both with respect to compression and
also when accessing data.
Here we will chunk the output data based on time and lead_time

.. GENERATED FROM PYTHON SOURCE LINES 211-222

.. code-block:: Python


    io = ZarrBackend(
        "outputs/17_io_sync.zarr",
        chunks={"time": 1, "lead_time": 1},
        backend_kwargs={"overwrite": True},
    )

    start_time = time.time()
    christmas_five_day_ensemble(times, nsteps, model, ds, io, pt, device=device)
    zarr_local_clock = time.time() - start_time





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:03:46.795 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221219/18/atmos/gfs.t18z.pgrb2.0p25.f000 295463736-857297
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:03:46.819 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221219/18/atmos/gfs.t18z.pgrb2.0p25.f000 422682974-1171397
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:03:46.844 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221219/18/atmos/gfs.t18z.pgrb2.0p25.f000 399402626-989950
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:03:46.869 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221219/18/atmos/gfs.t18z.pgrb2.0p25.f000 209450878-718645
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:03:46.893 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221219/18/atmos/gfs.t18z.pgrb2.0p25.f000 410101849-875378
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:03:46.916 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221219/18/atmos/gfs.t18z.pgrb2.0p25.f000 251866913-804464
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:03:46.940 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221219/18/atmos/gfs.t18z.pgrb2.0p25.f000 330483332-833835
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]    Fetching GFS data:  14%|█▍        | 1/7 [00:00<00:01,  5.91it/s]    Fetching GFS data: 100%|██████████| 7/7 [00:00<00:00, 41.31it/s]
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:03:46.973 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221220/00/atmos/gfs.t00z.pgrb2.0p25.f000 296814817-852960
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:03:46.997 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221220/00/atmos/gfs.t00z.pgrb2.0p25.f000 253345828-804505
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:03:47.021 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221220/00/atmos/gfs.t00z.pgrb2.0p25.f000 210327553-720496
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:03:47.045 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221220/00/atmos/gfs.t00z.pgrb2.0p25.f000 423575610-1170377
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:03:47.070 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221220/00/atmos/gfs.t00z.pgrb2.0p25.f000 331696727-829753
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:03:47.094 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221220/00/atmos/gfs.t00z.pgrb2.0p25.f000 410972364-870639
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:03:47.118 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221220/00/atmos/gfs.t00z.pgrb2.0p25.f000 400334303-985030
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]    Fetching GFS data:  14%|█▍        | 1/7 [00:00<00:01,  5.94it/s]    Fetching GFS data: 100%|██████████| 7/7 [00:00<00:00, 41.56it/s]
    2025-07-15 01:03:47.166 | WARNING  | earth2studio.io.zarr:add_array:200 - Datetime64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch
    2025-07-15 01:03:47.169 | WARNING  | earth2studio.io.zarr:add_array:206 - Timedelta64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:   0%|          | 0/21 [00:00<?, ?it/s]
    Running batch inference:   5%|▍         | 1/21 [00:00<00:14,  1.42it/s]
    Running batch inference:  10%|▉         | 2/21 [00:01<00:13,  1.42it/s]
    Running batch inference:  14%|█▍        | 3/21 [00:02<00:12,  1.44it/s]
    Running batch inference:  19%|█▉        | 4/21 [00:02<00:11,  1.47it/s]
    Running batch inference:  24%|██▍       | 5/21 [00:03<00:10,  1.49it/s]
    Running batch inference:  29%|██▊       | 6/21 [00:04<00:10,  1.45it/s]
    Running batch inference:  33%|███▎      | 7/21 [00:04<00:09,  1.45it/s]
    Running batch inference:  38%|███▊      | 8/21 [00:05<00:09,  1.44it/s]
    Running batch inference:  43%|████▎     | 9/21 [00:06<00:08,  1.44it/s]
    Running batch inference:  48%|████▊     | 10/21 [00:06<00:07,  1.44it/s]
    Running batch inference:  52%|█████▏    | 11/21 [00:07<00:06,  1.46it/s]
    Running batch inference:  57%|█████▋    | 12/21 [00:08<00:06,  1.47it/s]
    Running batch inference:  62%|██████▏   | 13/21 [00:08<00:05,  1.46it/s]
    Running batch inference:  67%|██████▋   | 14/21 [00:09<00:04,  1.44it/s]
    Running batch inference:  71%|███████▏  | 15/21 [00:10<00:04,  1.43it/s]
    Running batch inference:  76%|███████▌  | 16/21 [00:11<00:03,  1.45it/s]
    Running batch inference:  81%|████████  | 17/21 [00:11<00:02,  1.47it/s]
    Running batch inference:  86%|████████▌ | 18/21 [00:12<00:02,  1.47it/s]
    Running batch inference:  90%|█████████ | 19/21 [00:13<00:01,  1.45it/s]
    Running batch inference:  95%|█████████▌| 20/21 [00:13<00:00,  1.45it/s]
    Running batch inference: 100%|██████████| 21/21 [00:14<00:00,  1.48it/s]
                                                                            



.. GENERATED FROM PYTHON SOURCE LINES 223-229

.. code-block:: Python


    print(f"\nLocal zarr store inference time: {zarr_local_clock}s")
    print(
        f"Uncompressed zarr store size: {get_folder_size('outputs/17_io_sync.zarr'):.2f} MB"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Local zarr store inference time: 14.831547260284424s
    Uncompressed zarr store size: 1330.78 MB




.. GENERATED FROM PYTHON SOURCE LINES 230-238

Compressed Local Storage Zarr IO
--------------------------------
By default the Zarr IO backends will be uncompressed.
In many instances this is fine, when data volumes are low.
However, in instances that we are writing a very large amount of data or the data
needs to get sent over the network to a remote store, compression is essential.
With the standard Zarr backend, this will cause a very noticeable slow down, but note
that the output store will be 3x smaller!

.. GENERATED FROM PYTHON SOURCE LINES 240-256

.. code-block:: Python


    import zarr

    io = ZarrBackend(
        "outputs/17_io_sync_compressed.zarr",
        chunks={"time": 1, "lead_time": 1},
        backend_kwargs={"overwrite": True},
        zarr_codecs=zarr.codecs.BloscCodec(
            cname="zstd", clevel=3, shuffle=zarr.codecs.BloscShuffle.shuffle
        ),  # Zarrs default
    )

    start_time = time.time()
    christmas_five_day_ensemble(times, nsteps, model, ds, io, pt, device=device)
    zarr_local_clock = time.time() - start_time





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:01.631 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221219/18/atmos/gfs.t18z.pgrb2.0p25.f000 422682974-1171397
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:01.655 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221219/18/atmos/gfs.t18z.pgrb2.0p25.f000 330483332-833835
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:01.677 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221219/18/atmos/gfs.t18z.pgrb2.0p25.f000 410101849-875378
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:01.700 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221219/18/atmos/gfs.t18z.pgrb2.0p25.f000 295463736-857297
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:01.722 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221219/18/atmos/gfs.t18z.pgrb2.0p25.f000 209450878-718645
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:01.744 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221219/18/atmos/gfs.t18z.pgrb2.0p25.f000 251866913-804464
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:01.766 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221219/18/atmos/gfs.t18z.pgrb2.0p25.f000 399402626-989950
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]    Fetching GFS data:  14%|█▍        | 1/7 [00:00<00:00,  6.35it/s]    Fetching GFS data: 100%|██████████| 7/7 [00:00<00:00, 44.37it/s]
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:01.797 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221220/00/atmos/gfs.t00z.pgrb2.0p25.f000 253345828-804505
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:01.819 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221220/00/atmos/gfs.t00z.pgrb2.0p25.f000 423575610-1170377
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:01.841 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221220/00/atmos/gfs.t00z.pgrb2.0p25.f000 410972364-870639
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:01.864 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221220/00/atmos/gfs.t00z.pgrb2.0p25.f000 331696727-829753
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:01.889 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221220/00/atmos/gfs.t00z.pgrb2.0p25.f000 210327553-720496
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:01.912 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221220/00/atmos/gfs.t00z.pgrb2.0p25.f000 296814817-852960
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:01.934 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221220/00/atmos/gfs.t00z.pgrb2.0p25.f000 400334303-985030
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]    Fetching GFS data:  14%|█▍        | 1/7 [00:00<00:00,  6.22it/s]    Fetching GFS data: 100%|██████████| 7/7 [00:00<00:00, 43.48it/s]
    2025-07-15 01:04:01.984 | WARNING  | earth2studio.io.zarr:add_array:200 - Datetime64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch
    2025-07-15 01:04:01.988 | WARNING  | earth2studio.io.zarr:add_array:206 - Timedelta64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:   0%|          | 0/21 [00:00<?, ?it/s]
    Running batch inference:   5%|▍         | 1/21 [00:01<00:21,  1.06s/it]
    Running batch inference:  10%|▉         | 2/21 [00:02<00:20,  1.09s/it]
    Running batch inference:  14%|█▍        | 3/21 [00:03<00:19,  1.08s/it]
    Running batch inference:  19%|█▉        | 4/21 [00:04<00:18,  1.09s/it]
    Running batch inference:  24%|██▍       | 5/21 [00:05<00:17,  1.09s/it]
    Running batch inference:  29%|██▊       | 6/21 [00:06<00:16,  1.09s/it]
    Running batch inference:  33%|███▎      | 7/21 [00:07<00:15,  1.08s/it]
    Running batch inference:  38%|███▊      | 8/21 [00:08<00:14,  1.08s/it]
    Running batch inference:  43%|████▎     | 9/21 [00:09<00:13,  1.09s/it]
    Running batch inference:  48%|████▊     | 10/21 [00:10<00:12,  1.11s/it]
    Running batch inference:  52%|█████▏    | 11/21 [00:12<00:11,  1.11s/it]
    Running batch inference:  57%|█████▋    | 12/21 [00:13<00:10,  1.13s/it]
    Running batch inference:  62%|██████▏   | 13/21 [00:14<00:09,  1.13s/it]
    Running batch inference:  67%|██████▋   | 14/21 [00:15<00:07,  1.14s/it]
    Running batch inference:  71%|███████▏  | 15/21 [00:16<00:06,  1.12s/it]
    Running batch inference:  76%|███████▌  | 16/21 [00:17<00:05,  1.12s/it]
    Running batch inference:  81%|████████  | 17/21 [00:18<00:04,  1.12s/it]
    Running batch inference:  86%|████████▌ | 18/21 [00:19<00:03,  1.10s/it]
    Running batch inference:  90%|█████████ | 19/21 [00:21<00:02,  1.11s/it]
    Running batch inference:  95%|█████████▌| 20/21 [00:22<00:01,  1.12s/it]
    Running batch inference: 100%|██████████| 21/21 [00:23<00:00,  1.11s/it]
                                                                            



.. GENERATED FROM PYTHON SOURCE LINES 257-264

.. code-block:: Python


    print(f"\nLocal compressed zarr store inference time: {zarr_local_clock}s")
    print(
        f"Compressed zarr store size: {get_folder_size('outputs/17_io_sync_compressed.zarr'):.2f} MB"
    )






.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Local compressed zarr store inference time: 23.64557719230652s
    Compressed zarr store size: 413.09 MB




.. GENERATED FROM PYTHON SOURCE LINES 265-271

Local Storage NetCDF IO
-----------------------
NetCDF offers a similar user experience but saves the output into a single netCDF
file.
For local storage, NetCDF it typically preferred since it keeps all outputs into
a single file.

.. GENERATED FROM PYTHON SOURCE LINES 273-279

.. code-block:: Python


    io = NetCDF4Backend("outputs/17_io_sync.nc", backend_kwargs={"mode": "w"})
    start_time = time.time()
    christmas_five_day_ensemble(times, nsteps, model, ds, io, pt, device=device)
    nc_local_clock = time.time() - start_time





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:25.281 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221219/18/atmos/gfs.t18z.pgrb2.0p25.f000 295463736-857297
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:25.303 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221219/18/atmos/gfs.t18z.pgrb2.0p25.f000 251866913-804464
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:25.326 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221219/18/atmos/gfs.t18z.pgrb2.0p25.f000 330483332-833835
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:25.349 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221219/18/atmos/gfs.t18z.pgrb2.0p25.f000 209450878-718645
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:25.371 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221219/18/atmos/gfs.t18z.pgrb2.0p25.f000 422682974-1171397
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:25.394 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221219/18/atmos/gfs.t18z.pgrb2.0p25.f000 399402626-989950
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:25.416 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221219/18/atmos/gfs.t18z.pgrb2.0p25.f000 410101849-875378
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]    Fetching GFS data:  14%|█▍        | 1/7 [00:00<00:00,  6.34it/s]    Fetching GFS data: 100%|██████████| 7/7 [00:00<00:00, 44.32it/s]
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:25.446 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221220/00/atmos/gfs.t00z.pgrb2.0p25.f000 331696727-829753
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:25.469 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221220/00/atmos/gfs.t00z.pgrb2.0p25.f000 296814817-852960
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:25.491 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221220/00/atmos/gfs.t00z.pgrb2.0p25.f000 410972364-870639
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:25.514 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221220/00/atmos/gfs.t00z.pgrb2.0p25.f000 423575610-1170377
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:25.539 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221220/00/atmos/gfs.t00z.pgrb2.0p25.f000 400334303-985030
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:25.561 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221220/00/atmos/gfs.t00z.pgrb2.0p25.f000 210327553-720496
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:25.583 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221220/00/atmos/gfs.t00z.pgrb2.0p25.f000 253345828-804505
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]    Fetching GFS data:  14%|█▍        | 1/7 [00:00<00:00,  6.25it/s]    Fetching GFS data: 100%|██████████| 7/7 [00:00<00:00, 43.73it/s]

    Running batch inference:   0%|          | 0/21 [00:00<?, ?it/s]
    Running batch inference:   5%|▍         | 1/21 [00:00<00:16,  1.23it/s]
    Running batch inference:  19%|█▉        | 4/21 [00:00<00:03,  5.33it/s]
    Running batch inference:  38%|███▊      | 8/21 [00:01<00:01, 10.46it/s]
    Running batch inference:  57%|█████▋    | 12/21 [00:01<00:00, 14.73it/s]
    Running batch inference:  76%|███████▌  | 16/21 [00:01<00:00, 18.13it/s]
    Running batch inference:  95%|█████████▌| 20/21 [00:01<00:00, 20.73it/s]
                                                                            



.. GENERATED FROM PYTHON SOURCE LINES 280-286

.. code-block:: Python


    print(f"\nLocal netcdf store inference time: {nc_local_clock}s")
    print(
        f"Uncompressed zarr store size: {get_folder_size('outputs/17_io_sync.nc'):.2f} MB"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Local netcdf store inference time: 1.898916244506836s
    Uncompressed zarr store size: 1330.79 MB




.. GENERATED FROM PYTHON SOURCE LINES 287-293

In Memory Zarr IO
-----------------
One way we can speed up IO is to save outputs to in-memory stores.
In-memory stores more limited in size depending on the hardware being used.
Also one needs to be careful with in memory stores, once the Python object is deleted
the data is gone.

.. GENERATED FROM PYTHON SOURCE LINES 295-303

.. code-block:: Python


    io = ZarrBackend(
        chunks={"time": 1, "lead_time": 1}, backend_kwargs={"overwrite": True}
    )  # Not path = in memory for Zarr
    start_time = time.time()
    christmas_five_day_ensemble(times, nsteps, model, ds, io, pt, device=device)
    zarr_memory_clock = time.time() - start_time





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:27.181 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221219/18/atmos/gfs.t18z.pgrb2.0p25.f000 422682974-1171397
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:27.205 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221219/18/atmos/gfs.t18z.pgrb2.0p25.f000 399402626-989950
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:27.228 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221219/18/atmos/gfs.t18z.pgrb2.0p25.f000 209450878-718645
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:27.251 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221219/18/atmos/gfs.t18z.pgrb2.0p25.f000 330483332-833835
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:27.274 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221219/18/atmos/gfs.t18z.pgrb2.0p25.f000 410101849-875378
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:27.295 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221219/18/atmos/gfs.t18z.pgrb2.0p25.f000 295463736-857297
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:27.318 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221219/18/atmos/gfs.t18z.pgrb2.0p25.f000 251866913-804464
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]    Fetching GFS data:  14%|█▍        | 1/7 [00:00<00:00,  6.29it/s]    Fetching GFS data: 100%|██████████| 7/7 [00:00<00:00, 44.00it/s]
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:27.348 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221220/00/atmos/gfs.t00z.pgrb2.0p25.f000 210327553-720496
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:27.371 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221220/00/atmos/gfs.t00z.pgrb2.0p25.f000 400334303-985030
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:27.393 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221220/00/atmos/gfs.t00z.pgrb2.0p25.f000 296814817-852960
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:27.416 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221220/00/atmos/gfs.t00z.pgrb2.0p25.f000 331696727-829753
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:27.438 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221220/00/atmos/gfs.t00z.pgrb2.0p25.f000 423575610-1170377
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:27.460 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221220/00/atmos/gfs.t00z.pgrb2.0p25.f000 410972364-870639
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:27.482 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221220/00/atmos/gfs.t00z.pgrb2.0p25.f000 253345828-804505
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]    Fetching GFS data:  14%|█▍        | 1/7 [00:00<00:00,  6.38it/s]    Fetching GFS data: 100%|██████████| 7/7 [00:00<00:00, 44.60it/s]
    2025-07-15 01:04:27.530 | WARNING  | earth2studio.io.zarr:add_array:200 - Datetime64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch
    2025-07-15 01:04:27.533 | WARNING  | earth2studio.io.zarr:add_array:206 - Timedelta64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:   0%|          | 0/21 [00:00<?, ?it/s]
    Running batch inference:   5%|▍         | 1/21 [00:00<00:11,  1.71it/s]
    Running batch inference:  10%|▉         | 2/21 [00:01<00:11,  1.71it/s]
    Running batch inference:  14%|█▍        | 3/21 [00:01<00:10,  1.72it/s]
    Running batch inference:  19%|█▉        | 4/21 [00:02<00:09,  1.70it/s]
    Running batch inference:  24%|██▍       | 5/21 [00:02<00:09,  1.72it/s]
    Running batch inference:  29%|██▊       | 6/21 [00:03<00:08,  1.69it/s]
    Running batch inference:  33%|███▎      | 7/21 [00:04<00:08,  1.69it/s]
    Running batch inference:  38%|███▊      | 8/21 [00:04<00:07,  1.69it/s]
    Running batch inference:  43%|████▎     | 9/21 [00:05<00:07,  1.70it/s]
    Running batch inference:  48%|████▊     | 10/21 [00:05<00:06,  1.69it/s]
    Running batch inference:  52%|█████▏    | 11/21 [00:06<00:05,  1.70it/s]
    Running batch inference:  57%|█████▋    | 12/21 [00:07<00:05,  1.69it/s]
    Running batch inference:  62%|██████▏   | 13/21 [00:07<00:04,  1.69it/s]
    Running batch inference:  67%|██████▋   | 14/21 [00:08<00:04,  1.68it/s]
    Running batch inference:  71%|███████▏  | 15/21 [00:08<00:03,  1.69it/s]
    Running batch inference:  76%|███████▌  | 16/21 [00:09<00:02,  1.68it/s]
    Running batch inference:  81%|████████  | 17/21 [00:10<00:02,  1.68it/s]
    Running batch inference:  86%|████████▌ | 18/21 [00:10<00:01,  1.67it/s]
    Running batch inference:  90%|█████████ | 19/21 [00:11<00:01,  1.68it/s]
    Running batch inference:  95%|█████████▌| 20/21 [00:11<00:00,  1.68it/s]
    Running batch inference: 100%|██████████| 21/21 [00:12<00:00,  1.71it/s]
                                                                            



.. GENERATED FROM PYTHON SOURCE LINES 304-307

.. code-block:: Python


    print(f"\nIn memory zarr store inference time: {zarr_memory_clock}s")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    In memory zarr store inference time: 12.775722026824951s




.. GENERATED FROM PYTHON SOURCE LINES 308-321

Compressed Local Async Zarr IO
------------------------------
The async Zarr IO backend is an advanced IO backend designed to offer async
Zarr 3.0 writes to in-memory, local and remote data stores.
This data source is ideal when large volumes of data are needed to be written and
the users want to mask the IO with the forward execution of the model.

Because this IO backend relies on both async and multi-threading, it has a different
initialization pattern than others.
The main difference being that this backend does not use the add_array API, rather
users specify `parallel_coords` in the constructor that denote coords that slices will
be written to during inference.
Typically this might be `time`, `lead_time` and `ensemble`.

.. GENERATED FROM PYTHON SOURCE LINES 323-339

.. code-block:: Python


    parallel_coords = {
        "time": np.asarray(times),
        "lead_time": np.asarray([timedelta(hours=6 * i) for i in range(nsteps + 1)]),
    }
    io = AsyncZarrBackend(
        "outputs/17_io_async.zarr",
        parallel_coords=parallel_coords,
        zarr_codecs=zarr.codecs.BloscCodec(
            cname="zstd", clevel=3, shuffle=zarr.codecs.BloscShuffle.shuffle
        ),
    )
    start_time = time.time()
    christmas_five_day_ensemble(times, nsteps, model, ds, io, pt, device=device)
    zarr_async_clock = time.time() - start_time





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    2025-07-15 01:04:39.952 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:385 - Datetime64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch
    2025-07-15 01:04:39.952 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:391 - Timedelta64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch
    2025-07-15 01:04:39.953 | DEBUG    | earth2studio.io.async_zarr:__init__:167 - Setting up Zarr object pool of size 1, may take a bit
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:39.976 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221219/18/atmos/gfs.t18z.pgrb2.0p25.f000 330483332-833835
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:40.001 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221219/18/atmos/gfs.t18z.pgrb2.0p25.f000 399402626-989950
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:40.024 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221219/18/atmos/gfs.t18z.pgrb2.0p25.f000 422682974-1171397
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:40.047 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221219/18/atmos/gfs.t18z.pgrb2.0p25.f000 251866913-804464
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:40.070 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221219/18/atmos/gfs.t18z.pgrb2.0p25.f000 410101849-875378
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:40.093 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221219/18/atmos/gfs.t18z.pgrb2.0p25.f000 209450878-718645
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:40.116 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221219/18/atmos/gfs.t18z.pgrb2.0p25.f000 295463736-857297
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]    Fetching GFS data:  14%|█▍        | 1/7 [00:00<00:00,  6.17it/s]    Fetching GFS data: 100%|██████████| 7/7 [00:00<00:00, 43.15it/s]
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:40.146 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221220/00/atmos/gfs.t00z.pgrb2.0p25.f000 410972364-870639
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:40.169 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221220/00/atmos/gfs.t00z.pgrb2.0p25.f000 423575610-1170377
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:40.191 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221220/00/atmos/gfs.t00z.pgrb2.0p25.f000 331696727-829753
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:40.214 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221220/00/atmos/gfs.t00z.pgrb2.0p25.f000 400334303-985030
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:40.237 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221220/00/atmos/gfs.t00z.pgrb2.0p25.f000 210327553-720496
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:40.259 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221220/00/atmos/gfs.t00z.pgrb2.0p25.f000 253345828-804505
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:40.282 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221220/00/atmos/gfs.t00z.pgrb2.0p25.f000 296814817-852960
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]    Fetching GFS data:  14%|█▍        | 1/7 [00:00<00:00,  6.33it/s]    Fetching GFS data: 100%|██████████| 7/7 [00:00<00:00, 44.27it/s]

    Running batch inference:   0%|          | 0/21 [00:00<?, ?it/s]
                                                                   2025-07-15 01:04:40.331 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:385 - Datetime64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:   0%|          | 0/21 [00:00<?, ?it/s]
                                                                   2025-07-15 01:04:40.331 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:391 - Timedelta64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:   0%|          | 0/21 [00:00<?, ?it/s]
                                                                   2025-07-15 01:04:40.332 | DEBUG    | earth2studio.io.async_zarr:_initialize_arrays:311 - Writing coordinate array ensemble to zarr store

    Running batch inference:   0%|          | 0/21 [00:00<?, ?it/s]
                                                                   2025-07-15 01:04:40.335 | DEBUG    | earth2studio.io.async_zarr:_initialize_arrays:311 - Writing coordinate array time to zarr store

    Running batch inference:   0%|          | 0/21 [00:00<?, ?it/s]
                                                                   2025-07-15 01:04:40.337 | DEBUG    | earth2studio.io.async_zarr:_initialize_arrays:311 - Writing coordinate array lead_time to zarr store

    Running batch inference:   0%|          | 0/21 [00:00<?, ?it/s]
                                                                   2025-07-15 01:04:40.340 | DEBUG    | earth2studio.io.async_zarr:_initialize_arrays:311 - Writing coordinate array lat to zarr store

    Running batch inference:   0%|          | 0/21 [00:00<?, ?it/s]
                                                                   2025-07-15 01:04:40.343 | DEBUG    | earth2studio.io.async_zarr:_initialize_arrays:311 - Writing coordinate array lon to zarr store

    Running batch inference:   0%|          | 0/21 [00:00<?, ?it/s]
                                                                   2025-07-15 01:04:40.345 | DEBUG    | earth2studio.io.async_zarr:_initialize_arrays:345 - Initializing array t2m with shape (8, 1, 21, 721, 1440) with chunks (8, 1, 1, 721, 1440) dtype <class 'numpy.float32'>

    Running batch inference:   0%|          | 0/21 [00:00<?, ?it/s]
                                                                   2025-07-15 01:04:40.347 | DEBUG    | earth2studio.io.async_zarr:_initialize_arrays:345 - Initializing array tcwv with shape (8, 1, 21, 721, 1440) with chunks (8, 1, 1, 721, 1440) dtype <class 'numpy.float32'>

    Running batch inference:   0%|          | 0/21 [00:00<?, ?it/s]
                                                                   2025-07-15 01:04:40.388 | DEBUG    | earth2studio.io.async_zarr:_write:629 - Writing 1 chunks to 2 Zarr arrays

    Running batch inference:   0%|          | 0/21 [00:00<?, ?it/s]
    Running batch inference:   5%|▍         | 1/21 [00:00<00:08,  2.44it/s]
                                                                           2025-07-15 01:04:40.771 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:385 - Datetime64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:   5%|▍         | 1/21 [00:00<00:08,  2.44it/s]
                                                                           2025-07-15 01:04:40.772 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:391 - Timedelta64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:   5%|▍         | 1/21 [00:00<00:08,  2.44it/s]
                                                                           2025-07-15 01:04:40.822 | DEBUG    | earth2studio.io.async_zarr:_write:629 - Writing 1 chunks to 2 Zarr arrays

    Running batch inference:   5%|▍         | 1/21 [00:00<00:08,  2.44it/s]
    Running batch inference:  10%|▉         | 2/21 [00:00<00:07,  2.50it/s]
                                                                           2025-07-15 01:04:41.139 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:385 - Datetime64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  10%|▉         | 2/21 [00:00<00:07,  2.50it/s]
                                                                           2025-07-15 01:04:41.140 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:391 - Timedelta64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  10%|▉         | 2/21 [00:00<00:07,  2.50it/s]
                                                                           2025-07-15 01:04:41.219 | DEBUG    | earth2studio.io.async_zarr:_write:629 - Writing 1 chunks to 2 Zarr arrays

    Running batch inference:  10%|▉         | 2/21 [00:00<00:07,  2.50it/s]
    Running batch inference:  14%|█▍        | 3/21 [00:01<00:07,  2.52it/s]
                                                                           2025-07-15 01:04:41.561 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:385 - Datetime64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  14%|█▍        | 3/21 [00:01<00:07,  2.52it/s]
                                                                           2025-07-15 01:04:41.561 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:391 - Timedelta64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  14%|█▍        | 3/21 [00:01<00:07,  2.52it/s]
                                                                           2025-07-15 01:04:41.642 | DEBUG    | earth2studio.io.async_zarr:_write:629 - Writing 1 chunks to 2 Zarr arrays

    Running batch inference:  14%|█▍        | 3/21 [00:01<00:07,  2.52it/s]
    Running batch inference:  19%|█▉        | 4/21 [00:01<00:06,  2.45it/s]
                                                                           2025-07-15 01:04:41.958 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:385 - Datetime64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  19%|█▉        | 4/21 [00:01<00:06,  2.45it/s]
                                                                           2025-07-15 01:04:41.958 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:391 - Timedelta64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  19%|█▉        | 4/21 [00:01<00:06,  2.45it/s]
                                                                           2025-07-15 01:04:42.039 | DEBUG    | earth2studio.io.async_zarr:_write:629 - Writing 1 chunks to 2 Zarr arrays

    Running batch inference:  19%|█▉        | 4/21 [00:01<00:06,  2.45it/s]
    Running batch inference:  24%|██▍       | 5/21 [00:02<00:06,  2.51it/s]
                                                                           2025-07-15 01:04:42.370 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:385 - Datetime64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  24%|██▍       | 5/21 [00:02<00:06,  2.51it/s]
                                                                           2025-07-15 01:04:42.370 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:391 - Timedelta64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  24%|██▍       | 5/21 [00:02<00:06,  2.51it/s]
                                                                           2025-07-15 01:04:42.428 | DEBUG    | earth2studio.io.async_zarr:_write:629 - Writing 1 chunks to 2 Zarr arrays

    Running batch inference:  24%|██▍       | 5/21 [00:02<00:06,  2.51it/s]
    Running batch inference:  29%|██▊       | 6/21 [00:02<00:06,  2.47it/s]
                                                                           2025-07-15 01:04:42.757 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:385 - Datetime64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  29%|██▊       | 6/21 [00:02<00:06,  2.47it/s]
                                                                           2025-07-15 01:04:42.757 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:391 - Timedelta64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  29%|██▊       | 6/21 [00:02<00:06,  2.47it/s]
                                                                           2025-07-15 01:04:42.816 | DEBUG    | earth2studio.io.async_zarr:_write:629 - Writing 1 chunks to 2 Zarr arrays

    Running batch inference:  29%|██▊       | 6/21 [00:02<00:06,  2.47it/s]
    Running batch inference:  33%|███▎      | 7/21 [00:02<00:05,  2.50it/s]
                                                                           2025-07-15 01:04:43.186 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:385 - Datetime64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  33%|███▎      | 7/21 [00:02<00:05,  2.50it/s]
                                                                           2025-07-15 01:04:43.187 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:391 - Timedelta64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  33%|███▎      | 7/21 [00:02<00:05,  2.50it/s]
                                                                           2025-07-15 01:04:43.270 | DEBUG    | earth2studio.io.async_zarr:_write:629 - Writing 1 chunks to 2 Zarr arrays

    Running batch inference:  33%|███▎      | 7/21 [00:02<00:05,  2.50it/s]
    Running batch inference:  38%|███▊      | 8/21 [00:03<00:05,  2.43it/s]
                                                                           2025-07-15 01:04:43.583 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:385 - Datetime64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  38%|███▊      | 8/21 [00:03<00:05,  2.43it/s]
                                                                           2025-07-15 01:04:43.583 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:391 - Timedelta64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  38%|███▊      | 8/21 [00:03<00:05,  2.43it/s]
                                                                           2025-07-15 01:04:43.643 | DEBUG    | earth2studio.io.async_zarr:_write:629 - Writing 1 chunks to 2 Zarr arrays

    Running batch inference:  38%|███▊      | 8/21 [00:03<00:05,  2.43it/s]
    Running batch inference:  43%|████▎     | 9/21 [00:03<00:04,  2.48it/s]
                                                                           2025-07-15 01:04:44.010 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:385 - Datetime64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  43%|████▎     | 9/21 [00:03<00:04,  2.48it/s]
                                                                           2025-07-15 01:04:44.011 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:391 - Timedelta64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  43%|████▎     | 9/21 [00:03<00:04,  2.48it/s]
                                                                           2025-07-15 01:04:44.066 | DEBUG    | earth2studio.io.async_zarr:_write:629 - Writing 1 chunks to 2 Zarr arrays

    Running batch inference:  43%|████▎     | 9/21 [00:03<00:04,  2.48it/s]
    Running batch inference:  48%|████▊     | 10/21 [00:04<00:04,  2.45it/s]
                                                                            2025-07-15 01:04:44.383 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:385 - Datetime64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  48%|████▊     | 10/21 [00:04<00:04,  2.45it/s]
                                                                            2025-07-15 01:04:44.383 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:391 - Timedelta64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  48%|████▊     | 10/21 [00:04<00:04,  2.45it/s]
                                                                            2025-07-15 01:04:44.435 | DEBUG    | earth2studio.io.async_zarr:_write:629 - Writing 1 chunks to 2 Zarr arrays

    Running batch inference:  48%|████▊     | 10/21 [00:04<00:04,  2.45it/s]
    Running batch inference:  52%|█████▏    | 11/21 [00:04<00:03,  2.58it/s]
                                                                            2025-07-15 01:04:44.750 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:385 - Datetime64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  52%|█████▏    | 11/21 [00:04<00:03,  2.58it/s]
                                                                            2025-07-15 01:04:44.751 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:391 - Timedelta64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  52%|█████▏    | 11/21 [00:04<00:03,  2.58it/s]
                                                                            2025-07-15 01:04:44.802 | DEBUG    | earth2studio.io.async_zarr:_write:629 - Writing 1 chunks to 2 Zarr arrays

    Running batch inference:  52%|█████▏    | 11/21 [00:04<00:03,  2.58it/s]
    Running batch inference:  57%|█████▋    | 12/21 [00:04<00:03,  2.58it/s]
                                                                            2025-07-15 01:04:45.114 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:385 - Datetime64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  57%|█████▋    | 12/21 [00:04<00:03,  2.58it/s]
                                                                            2025-07-15 01:04:45.115 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:391 - Timedelta64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  57%|█████▋    | 12/21 [00:04<00:03,  2.58it/s]
                                                                            2025-07-15 01:04:45.167 | DEBUG    | earth2studio.io.async_zarr:_write:629 - Writing 1 chunks to 2 Zarr arrays

    Running batch inference:  57%|█████▋    | 12/21 [00:04<00:03,  2.58it/s]
    Running batch inference:  62%|██████▏   | 13/21 [00:05<00:03,  2.65it/s]
                                                                            2025-07-15 01:04:45.488 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:385 - Datetime64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  62%|██████▏   | 13/21 [00:05<00:03,  2.65it/s]
                                                                            2025-07-15 01:04:45.488 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:391 - Timedelta64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  62%|██████▏   | 13/21 [00:05<00:03,  2.65it/s]
                                                                            2025-07-15 01:04:45.540 | DEBUG    | earth2studio.io.async_zarr:_write:629 - Writing 1 chunks to 2 Zarr arrays

    Running batch inference:  62%|██████▏   | 13/21 [00:05<00:03,  2.65it/s]
    Running batch inference:  67%|██████▋   | 14/21 [00:05<00:02,  2.67it/s]
                                                                            2025-07-15 01:04:45.835 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:385 - Datetime64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  67%|██████▋   | 14/21 [00:05<00:02,  2.67it/s]
                                                                            2025-07-15 01:04:45.835 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:391 - Timedelta64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  67%|██████▋   | 14/21 [00:05<00:02,  2.67it/s]
                                                                            2025-07-15 01:04:45.886 | DEBUG    | earth2studio.io.async_zarr:_write:629 - Writing 1 chunks to 2 Zarr arrays

    Running batch inference:  67%|██████▋   | 14/21 [00:05<00:02,  2.67it/s]
    Running batch inference:  71%|███████▏  | 15/21 [00:05<00:02,  2.75it/s]
                                                                            2025-07-15 01:04:46.196 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:385 - Datetime64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  71%|███████▏  | 15/21 [00:05<00:02,  2.75it/s]
                                                                            2025-07-15 01:04:46.197 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:391 - Timedelta64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  71%|███████▏  | 15/21 [00:05<00:02,  2.75it/s]
                                                                            2025-07-15 01:04:46.248 | DEBUG    | earth2studio.io.async_zarr:_write:629 - Writing 1 chunks to 2 Zarr arrays

    Running batch inference:  71%|███████▏  | 15/21 [00:05<00:02,  2.75it/s]
    Running batch inference:  76%|███████▌  | 16/21 [00:06<00:01,  2.75it/s]
                                                                            2025-07-15 01:04:46.536 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:385 - Datetime64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  76%|███████▌  | 16/21 [00:06<00:01,  2.75it/s]
                                                                            2025-07-15 01:04:46.536 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:391 - Timedelta64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  76%|███████▌  | 16/21 [00:06<00:01,  2.75it/s]
                                                                            2025-07-15 01:04:46.588 | DEBUG    | earth2studio.io.async_zarr:_write:629 - Writing 1 chunks to 2 Zarr arrays

    Running batch inference:  76%|███████▌  | 16/21 [00:06<00:01,  2.75it/s]
    Running batch inference:  81%|████████  | 17/21 [00:06<00:01,  2.72it/s]
                                                                            2025-07-15 01:04:46.937 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:385 - Datetime64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  81%|████████  | 17/21 [00:06<00:01,  2.72it/s]
                                                                            2025-07-15 01:04:46.938 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:391 - Timedelta64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  81%|████████  | 17/21 [00:06<00:01,  2.72it/s]
                                                                            2025-07-15 01:04:46.990 | DEBUG    | earth2studio.io.async_zarr:_write:629 - Writing 1 chunks to 2 Zarr arrays

    Running batch inference:  81%|████████  | 17/21 [00:06<00:01,  2.72it/s]
    Running batch inference:  86%|████████▌ | 18/21 [00:06<00:01,  2.73it/s]
                                                                            2025-07-15 01:04:47.280 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:385 - Datetime64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  86%|████████▌ | 18/21 [00:06<00:01,  2.73it/s]
                                                                            2025-07-15 01:04:47.280 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:391 - Timedelta64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  86%|████████▌ | 18/21 [00:06<00:01,  2.73it/s]
                                                                            2025-07-15 01:04:47.310 | DEBUG    | earth2studio.io.async_zarr:_write:629 - Writing 1 chunks to 2 Zarr arrays

    Running batch inference:  86%|████████▌ | 18/21 [00:06<00:01,  2.73it/s]
    Running batch inference:  90%|█████████ | 19/21 [00:07<00:00,  2.74it/s]
                                                                            2025-07-15 01:04:47.663 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:385 - Datetime64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  90%|█████████ | 19/21 [00:07<00:00,  2.74it/s]
                                                                            2025-07-15 01:04:47.663 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:391 - Timedelta64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  90%|█████████ | 19/21 [00:07<00:00,  2.74it/s]
                                                                            2025-07-15 01:04:47.717 | DEBUG    | earth2studio.io.async_zarr:_write:629 - Writing 1 chunks to 2 Zarr arrays

    Running batch inference:  90%|█████████ | 19/21 [00:07<00:00,  2.74it/s]
    Running batch inference:  95%|█████████▌| 20/21 [00:07<00:00,  2.70it/s]
                                                                            2025-07-15 01:04:48.022 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:385 - Datetime64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  95%|█████████▌| 20/21 [00:07<00:00,  2.70it/s]
                                                                            2025-07-15 01:04:48.022 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:391 - Timedelta64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  95%|█████████▌| 20/21 [00:07<00:00,  2.70it/s]
                                                                            2025-07-15 01:04:48.063 | DEBUG    | earth2studio.io.async_zarr:_write:629 - Writing 1 chunks to 2 Zarr arrays

    Running batch inference:  95%|█████████▌| 20/21 [00:07<00:00,  2.70it/s]
    Running batch inference: 100%|██████████| 21/21 [00:08<00:00,  2.68it/s]
                                                                            



.. GENERATED FROM PYTHON SOURCE LINES 340-346

.. code-block:: Python


    print(f"\nAsync zarr store inference time: {zarr_async_clock}s")
    print(
        f"Compressed async zarr store size: {get_folder_size('outputs/17_io_async.zarr'):.2f} MB"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Async zarr store inference time: 8.422852516174316s
    Compressed async zarr store size: 413.08 MB




.. GENERATED FROM PYTHON SOURCE LINES 347-359

Compressed Local Non-Blocking Async Zarr IO
-------------------------------------------
That was faster than the normal Zarr method, even the uncompressed version making it
comparable to NetCDF, but we can still improve with this IO backend.
A unique feature of this particular backend is running in non-blocking mode, namely
IO writes will be placed onto other threads.
Users do need to be careful with this to both ensure data is not mutated while the IO
backend is working to move the data off the GPU, but also to make sure to wait for
write threads to finish before the object is deleted.

Note that this backend allows Zarr to be comparable to uncompressed NetCDF even 3x
compression!

.. GENERATED FROM PYTHON SOURCE LINES 361-376

.. code-block:: Python


    io = AsyncZarrBackend(
        "outputs/17_io_nonblocking_async.zarr",
        parallel_coords=parallel_coords,
        blocking=False,
        zarr_codecs=zarr.codecs.BloscCodec(
            cname="zstd", clevel=3, shuffle=zarr.codecs.BloscShuffle.shuffle
        ),
    )
    start_time = time.time()
    christmas_five_day_ensemble(times, nsteps, model, ds, io, pt, device=device)
    # IMPORTANT: Make sure to call close to ensure IO backend threads have finished!
    io.close()
    zarr_nonblocking_async_clock = time.time() - start_time





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    2025-07-15 01:04:48.399 | DEBUG    | earth2studio.io.async_zarr:__init__:167 - Setting up Zarr object pool of size 8, may take a bit
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:48.425 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221219/18/atmos/gfs.t18z.pgrb2.0p25.f000 330483332-833835
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:48.453 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221219/18/atmos/gfs.t18z.pgrb2.0p25.f000 295463736-857297
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:48.476 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221219/18/atmos/gfs.t18z.pgrb2.0p25.f000 410101849-875378
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:48.499 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221219/18/atmos/gfs.t18z.pgrb2.0p25.f000 399402626-989950
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:48.522 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221219/18/atmos/gfs.t18z.pgrb2.0p25.f000 422682974-1171397
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:48.545 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221219/18/atmos/gfs.t18z.pgrb2.0p25.f000 251866913-804464
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:48.567 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221219/18/atmos/gfs.t18z.pgrb2.0p25.f000 209450878-718645
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]    Fetching GFS data:  14%|█▍        | 1/7 [00:00<00:00,  6.05it/s]    Fetching GFS data: 100%|██████████| 7/7 [00:00<00:00, 42.33it/s]
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:48.598 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221220/00/atmos/gfs.t00z.pgrb2.0p25.f000 296814817-852960
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:48.621 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221220/00/atmos/gfs.t00z.pgrb2.0p25.f000 331696727-829753
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:48.644 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221220/00/atmos/gfs.t00z.pgrb2.0p25.f000 253345828-804505
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:48.666 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221220/00/atmos/gfs.t00z.pgrb2.0p25.f000 210327553-720496
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:48.689 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221220/00/atmos/gfs.t00z.pgrb2.0p25.f000 410972364-870639
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:48.712 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221220/00/atmos/gfs.t00z.pgrb2.0p25.f000 423575610-1170377
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:04:48.735 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221220/00/atmos/gfs.t00z.pgrb2.0p25.f000 400334303-985030
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]    Fetching GFS data:  14%|█▍        | 1/7 [00:00<00:00,  6.26it/s]    Fetching GFS data: 100%|██████████| 7/7 [00:00<00:00, 43.79it/s]

    Running batch inference:   0%|          | 0/21 [00:00<?, ?it/s]
                                                                   2025-07-15 01:04:48.785 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:385 - Datetime64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:   0%|          | 0/21 [00:00<?, ?it/s]
                                                                   2025-07-15 01:04:48.785 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:391 - Timedelta64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:   0%|          | 0/21 [00:00<?, ?it/s]
                                                                   2025-07-15 01:04:48.786 | DEBUG    | earth2studio.io.async_zarr:_initialize_arrays:311 - Writing coordinate array ensemble to zarr store

    Running batch inference:   0%|          | 0/21 [00:00<?, ?it/s]
                                                                   2025-07-15 01:04:48.789 | DEBUG    | earth2studio.io.async_zarr:_initialize_arrays:311 - Writing coordinate array time to zarr store

    Running batch inference:   0%|          | 0/21 [00:00<?, ?it/s]
                                                                   2025-07-15 01:04:48.792 | DEBUG    | earth2studio.io.async_zarr:_initialize_arrays:311 - Writing coordinate array lead_time to zarr store

    Running batch inference:   0%|          | 0/21 [00:00<?, ?it/s]
                                                                   2025-07-15 01:04:48.795 | DEBUG    | earth2studio.io.async_zarr:_initialize_arrays:311 - Writing coordinate array lat to zarr store

    Running batch inference:   0%|          | 0/21 [00:00<?, ?it/s]
                                                                   2025-07-15 01:04:48.798 | DEBUG    | earth2studio.io.async_zarr:_initialize_arrays:311 - Writing coordinate array lon to zarr store

    Running batch inference:   0%|          | 0/21 [00:00<?, ?it/s]
                                                                   2025-07-15 01:04:48.801 | DEBUG    | earth2studio.io.async_zarr:_initialize_arrays:345 - Initializing array t2m with shape (8, 1, 21, 721, 1440) with chunks (8, 1, 1, 721, 1440) dtype <class 'numpy.float32'>

    Running batch inference:   0%|          | 0/21 [00:00<?, ?it/s]
                                                                   2025-07-15 01:04:48.803 | DEBUG    | earth2studio.io.async_zarr:_initialize_arrays:345 - Initializing array tcwv with shape (8, 1, 21, 721, 1440) with chunks (8, 1, 1, 721, 1440) dtype <class 'numpy.float32'>

    Running batch inference:   0%|          | 0/21 [00:00<?, ?it/s]
                                                                   2025-07-15 01:04:48.851 | DEBUG    | earth2studio.io.async_zarr:_write:629 - Writing 1 chunks to 2 Zarr arrays

    Running batch inference:   5%|▍         | 1/21 [00:00<00:01, 14.24it/s]
                                                                           2025-07-15 01:04:48.883 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:385 - Datetime64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:   5%|▍         | 1/21 [00:00<00:02,  9.71it/s]
                                                                           2025-07-15 01:04:48.884 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:391 - Timedelta64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:   5%|▍         | 1/21 [00:00<00:02,  9.69it/s]
    Running batch inference:  10%|▉         | 2/21 [00:00<00:01, 17.48it/s]
                                                                           2025-07-15 01:04:48.946 | DEBUG    | earth2studio.io.async_zarr:_write:629 - Writing 1 chunks to 2 Zarr arrays

    Running batch inference:  10%|▉         | 2/21 [00:00<00:01, 17.48it/s]
                                                                           2025-07-15 01:04:48.954 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:385 - Datetime64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  10%|▉         | 2/21 [00:00<00:01, 17.48it/s]
                                                                           2025-07-15 01:04:48.955 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:391 - Timedelta64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  10%|▉         | 2/21 [00:00<00:01, 17.48it/s]
                                                                           2025-07-15 01:04:49.009 | DEBUG    | earth2studio.io.async_zarr:_write:629 - Writing 1 chunks to 2 Zarr arrays

    Running batch inference:  14%|█▍        | 3/21 [00:00<00:01, 17.48it/s]
                                                                           2025-07-15 01:04:49.047 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:385 - Datetime64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  14%|█▍        | 3/21 [00:00<00:01, 17.48it/s]
                                                                           2025-07-15 01:04:49.047 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:391 - Timedelta64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  14%|█▍        | 3/21 [00:00<00:01, 17.48it/s]
    Running batch inference:  19%|█▉        | 4/21 [00:00<00:01, 13.96it/s]
                                                                           2025-07-15 01:04:49.098 | DEBUG    | earth2studio.io.async_zarr:_write:629 - Writing 1 chunks to 2 Zarr arrays

    Running batch inference:  19%|█▉        | 4/21 [00:00<00:01, 13.96it/s]
                                                                           2025-07-15 01:04:49.106 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:385 - Datetime64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  19%|█▉        | 4/21 [00:00<00:01, 13.96it/s]
                                                                           2025-07-15 01:04:49.107 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:391 - Timedelta64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  19%|█▉        | 4/21 [00:00<00:01, 13.96it/s]
                                                                           2025-07-15 01:04:49.167 | DEBUG    | earth2studio.io.async_zarr:_write:629 - Writing 1 chunks to 2 Zarr arrays

    Running batch inference:  24%|██▍       | 5/21 [00:00<00:01, 13.96it/s]
                                                                           2025-07-15 01:04:49.215 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:385 - Datetime64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  24%|██▍       | 5/21 [00:00<00:01, 13.96it/s]
                                                                           2025-07-15 01:04:49.215 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:391 - Timedelta64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  24%|██▍       | 5/21 [00:00<00:01, 13.96it/s]
    Running batch inference:  29%|██▊       | 6/21 [00:00<00:01, 12.95it/s]
                                                                           2025-07-15 01:04:49.270 | DEBUG    | earth2studio.io.async_zarr:_write:629 - Writing 1 chunks to 2 Zarr arrays

    Running batch inference:  29%|██▊       | 6/21 [00:00<00:01, 12.95it/s]
                                                                           2025-07-15 01:04:49.278 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:385 - Datetime64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  29%|██▊       | 6/21 [00:00<00:01, 12.95it/s]
                                                                           2025-07-15 01:04:49.279 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:391 - Timedelta64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  29%|██▊       | 6/21 [00:00<00:01, 12.95it/s]
                                                                           2025-07-15 01:04:49.327 | DEBUG    | earth2studio.io.async_zarr:_write:629 - Writing 1 chunks to 2 Zarr arrays

    Running batch inference:  33%|███▎      | 7/21 [00:00<00:01, 12.95it/s]
                                                                           2025-07-15 01:04:49.368 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:385 - Datetime64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  33%|███▎      | 7/21 [00:00<00:01, 12.95it/s]
                                                                           2025-07-15 01:04:49.368 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:391 - Timedelta64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  33%|███▎      | 7/21 [00:00<00:01, 12.95it/s]
    Running batch inference:  38%|███▊      | 8/21 [00:00<00:01, 12.84it/s]
                                                                           2025-07-15 01:04:49.426 | DEBUG    | earth2studio.io.async_zarr:_write:629 - Writing 1 chunks to 2 Zarr arrays

    Running batch inference:  38%|███▊      | 8/21 [00:00<00:01, 12.84it/s]
                                                                           2025-07-15 01:04:49.434 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:385 - Datetime64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  38%|███▊      | 8/21 [00:00<00:01, 12.84it/s]
                                                                           2025-07-15 01:04:49.434 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:391 - Timedelta64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  38%|███▊      | 8/21 [00:00<00:01, 12.84it/s]
                                                                           2025-07-15 01:04:49.517 | DEBUG    | earth2studio.io.async_zarr:_write:629 - Writing 1 chunks to 2 Zarr arrays

    Running batch inference:  43%|████▎     | 9/21 [00:00<00:00, 12.84it/s]
                                                                           2025-07-15 01:04:49.552 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:385 - Datetime64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  43%|████▎     | 9/21 [00:00<00:00, 12.84it/s]
                                                                           2025-07-15 01:04:49.552 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:391 - Timedelta64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  43%|████▎     | 9/21 [00:00<00:00, 12.84it/s]
    Running batch inference:  48%|████▊     | 10/21 [00:00<00:00, 12.23it/s]
                                                                            2025-07-15 01:04:49.597 | DEBUG    | earth2studio.io.async_zarr:_write:629 - Writing 1 chunks to 2 Zarr arrays

    Running batch inference:  48%|████▊     | 10/21 [00:00<00:00, 12.23it/s]
                                                                            2025-07-15 01:04:49.605 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:385 - Datetime64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  48%|████▊     | 10/21 [00:00<00:00, 12.23it/s]
                                                                            2025-07-15 01:04:49.606 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:391 - Timedelta64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  48%|████▊     | 10/21 [00:00<00:00, 12.23it/s]
                                                                            2025-07-15 01:04:49.640 | DEBUG    | earth2studio.io.async_zarr:_write:629 - Writing 1 chunks to 2 Zarr arrays

    Running batch inference:  52%|█████▏    | 11/21 [00:00<00:00, 12.23it/s]
                                                                            2025-07-15 01:04:49.680 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:385 - Datetime64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  52%|█████▏    | 11/21 [00:00<00:00, 12.23it/s]
                                                                            2025-07-15 01:04:49.680 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:391 - Timedelta64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  52%|█████▏    | 11/21 [00:00<00:00, 12.23it/s]
    Running batch inference:  57%|█████▋    | 12/21 [00:00<00:00, 13.22it/s]
                                                                            2025-07-15 01:04:49.734 | DEBUG    | earth2studio.io.async_zarr:_write:629 - Writing 1 chunks to 2 Zarr arrays

    Running batch inference:  57%|█████▋    | 12/21 [00:00<00:00, 13.22it/s]
                                                                            2025-07-15 01:04:49.734 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:385 - Datetime64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  57%|█████▋    | 12/21 [00:00<00:00, 13.22it/s]
                                                                            2025-07-15 01:04:49.735 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:391 - Timedelta64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  57%|█████▋    | 12/21 [00:00<00:00, 13.22it/s]
                                                                            2025-07-15 01:04:49.771 | DEBUG    | earth2studio.io.async_zarr:_write:629 - Writing 1 chunks to 2 Zarr arrays

    Running batch inference:  62%|██████▏   | 13/21 [00:00<00:00, 13.22it/s]
                                                                            2025-07-15 01:04:49.812 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:385 - Datetime64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  62%|██████▏   | 13/21 [00:01<00:00, 13.22it/s]
                                                                            2025-07-15 01:04:49.813 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:391 - Timedelta64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  62%|██████▏   | 13/21 [00:01<00:00, 13.22it/s]
    Running batch inference:  67%|██████▋   | 14/21 [00:01<00:00, 13.77it/s]
                                                                            2025-07-15 01:04:49.863 | DEBUG    | earth2studio.io.async_zarr:_write:629 - Writing 1 chunks to 2 Zarr arrays

    Running batch inference:  67%|██████▋   | 14/21 [00:01<00:00, 13.77it/s]
                                                                            2025-07-15 01:04:49.871 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:385 - Datetime64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  67%|██████▋   | 14/21 [00:01<00:00, 13.77it/s]
                                                                            2025-07-15 01:04:49.872 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:391 - Timedelta64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  67%|██████▋   | 14/21 [00:01<00:00, 13.77it/s]
                                                                            2025-07-15 01:04:49.906 | DEBUG    | earth2studio.io.async_zarr:_write:629 - Writing 1 chunks to 2 Zarr arrays

    Running batch inference:  71%|███████▏  | 15/21 [00:01<00:00, 13.77it/s]
                                                                            2025-07-15 01:04:49.957 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:385 - Datetime64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  71%|███████▏  | 15/21 [00:01<00:00, 13.77it/s]
                                                                            2025-07-15 01:04:49.957 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:391 - Timedelta64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  71%|███████▏  | 15/21 [00:01<00:00, 13.77it/s]
    Running batch inference:  76%|███████▌  | 16/21 [00:01<00:00, 13.72it/s]
                                                                            2025-07-15 01:04:50.004 | DEBUG    | earth2studio.io.async_zarr:_write:629 - Writing 1 chunks to 2 Zarr arrays

    Running batch inference:  76%|███████▌  | 16/21 [00:01<00:00, 13.72it/s]
                                                                            2025-07-15 01:04:50.012 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:385 - Datetime64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  76%|███████▌  | 16/21 [00:01<00:00, 13.72it/s]
                                                                            2025-07-15 01:04:50.013 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:391 - Timedelta64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  76%|███████▌  | 16/21 [00:01<00:00, 13.72it/s]
                                                                            2025-07-15 01:04:50.073 | DEBUG    | earth2studio.io.async_zarr:_write:629 - Writing 1 chunks to 2 Zarr arrays

    Running batch inference:  81%|████████  | 17/21 [00:01<00:00, 13.72it/s]
                                                                            2025-07-15 01:04:50.105 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:385 - Datetime64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  81%|████████  | 17/21 [00:01<00:00, 13.72it/s]
                                                                            2025-07-15 01:04:50.106 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:391 - Timedelta64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  81%|████████  | 17/21 [00:01<00:00, 13.72it/s]
    Running batch inference:  86%|████████▌ | 18/21 [00:01<00:00, 13.73it/s]
                                                                            2025-07-15 01:04:50.135 | DEBUG    | earth2studio.io.async_zarr:_write:629 - Writing 1 chunks to 2 Zarr arrays

    Running batch inference:  86%|████████▌ | 18/21 [00:01<00:00, 13.73it/s]
                                                                            2025-07-15 01:04:50.143 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:385 - Datetime64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  86%|████████▌ | 18/21 [00:01<00:00, 13.73it/s]
                                                                            2025-07-15 01:04:50.143 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:391 - Timedelta64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  86%|████████▌ | 18/21 [00:01<00:00, 13.73it/s]
                                                                            2025-07-15 01:04:50.195 | DEBUG    | earth2studio.io.async_zarr:_write:629 - Writing 1 chunks to 2 Zarr arrays

    Running batch inference:  90%|█████████ | 19/21 [00:01<00:00, 13.73it/s]
                                                                            2025-07-15 01:04:50.232 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:385 - Datetime64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  90%|█████████ | 19/21 [00:01<00:00, 13.73it/s]
                                                                            2025-07-15 01:04:50.232 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:391 - Timedelta64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  90%|█████████ | 19/21 [00:01<00:00, 13.73it/s]
    Running batch inference:  95%|█████████▌| 20/21 [00:01<00:00, 14.29it/s]
                                                                            2025-07-15 01:04:50.285 | DEBUG    | earth2studio.io.async_zarr:_write:629 - Writing 1 chunks to 2 Zarr arrays

    Running batch inference:  95%|█████████▌| 20/21 [00:01<00:00, 14.29it/s]
                                                                            2025-07-15 01:04:50.293 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:385 - Datetime64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  95%|█████████▌| 20/21 [00:01<00:00, 14.29it/s]
                                                                            2025-07-15 01:04:50.294 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:391 - Timedelta64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  95%|█████████▌| 20/21 [00:01<00:00, 14.29it/s]
                                                                            2025-07-15 01:04:50.304 | DEBUG    | earth2studio.io.async_zarr:_limit_pool_size:495 - In IO thread pool throttle, limiting 
    2025-07-15 01:04:50.311 | DEBUG    | earth2studio.io.async_zarr:_limit_pool_size:495 - In IO thread pool throttle, limiting 
    2025-07-15 01:04:50.331 | DEBUG    | earth2studio.io.async_zarr:_write:629 - Writing 1 chunks to 2 Zarr arrays
    2025-07-15 01:04:50.388 | DEBUG    | earth2studio.io.async_zarr:_limit_pool_size:495 - In IO thread pool throttle, limiting 
    2025-07-15 01:04:50.435 | DEBUG    | earth2studio.io.async_zarr:_limit_pool_size:495 - In IO thread pool throttle, limiting 
    2025-07-15 01:04:50.479 | DEBUG    | earth2studio.io.async_zarr:_limit_pool_size:495 - In IO thread pool throttle, limiting 
    2025-07-15 01:04:50.633 | DEBUG    | earth2studio.io.async_zarr:_limit_pool_size:495 - In IO thread pool throttle, limiting 




.. GENERATED FROM PYTHON SOURCE LINES 377-385

.. code-block:: Python


    print(
        f"\nNon-blocking async zarr store inference time: {zarr_nonblocking_async_clock}s"
    )
    print(
        f"Compressed non-blocking async zarr store size: {get_folder_size('outputs/17_io_nonblocking_async.zarr'):.2f} MB"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Non-blocking async zarr store inference time: 2.2184269428253174s
    Compressed non-blocking async zarr store size: 413.07 MB




.. GENERATED FROM PYTHON SOURCE LINES 386-405

Remote Non-Blocking Async Zarr IO
----------------------------------
This IO backend can be further customized by changing the Fsspec Filesystem used by
the Zarr store which can be controlled via the `fs_factory` parameter.
Note that this is a factory method, the IO backend will need to create multiple
instances of the file system.
Some examples that may be of interest are:

- :code:`from fsspec.implementations.local import LocalFileSystem` (Default, local store)
- :code:`from fsspec.implementations.memory import MemoryFileSystem` (in-memory store)
- :code:`from s3fs import S3FileSystem` (Remote S3 store)

For sake of example, lets have a look at writing to a remote store would require.
Compression is a must in this instances, since we need to minimize the data transfer
over the network.
The file system factory is set to S3 with the appropiate credentials in a partial
callable object.
Lastly we can increase the max number of thread workers with the `pool_size` parameter
to further boost performance.

.. GENERATED FROM PYTHON SOURCE LINES 407-443

.. code-block:: Python


    import functools

    import s3fs

    if "S3FS_KEY" in os.environ and "S3FS_SECRET" in os.environ:
        # Remember, needs to be a callable
        fs_factory = functools.partial(
            s3fs.S3FileSystem,
            key=os.environ["S3FS_KEY"],
            secret=os.environ["S3FS_SECRET"],
            client_kwargs={"endpoint_url": os.environ.get("S3FS_ENDPOINT", None)},
            asynchronous=True,
        )
        io = AsyncZarrBackend(
            "earth2studio/ci/example/17_io_async.zarr",
            parallel_coords=parallel_coords,
            fs_factory=fs_factory,
            blocking=False,
            pool_size=16,
            zarr_codecs=zarr.codecs.BloscCodec(
                cname="zstd", clevel=3, shuffle=zarr.codecs.BloscShuffle.shuffle
            ),
        )
        christmas_five_day_ensemble(times, 4, model, ds, io, pt, device=device)
        # IMPORTANT: Make sure to call close to ensure IO backend threads have finished!
        io.close()

        # To clean up the zarr store you can use
        # fs = s3fs.S3FileSystem(
        #     key=os.environ["S3FS_KEY"],
        #     secret=os.environ["S3FS_SECRET"],
        #     client_kwargs={"endpoint_url": os.environ.get("S3FS_ENDPOINT", None)},
        # )
        # fs.rm("earth2studio/ci/example/17_io_async.zarr", recursive=True)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    2025-07-15 01:04:50.660 | DEBUG    | earth2studio.io.async_zarr:__init__:167 - Setting up Zarr object pool of size 16, may take a bit
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:05:05.964 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221219/18/atmos/gfs.t18z.pgrb2.0p25.f000 330483332-833835
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:05:06.008 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221219/18/atmos/gfs.t18z.pgrb2.0p25.f000 251866913-804464
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:05:06.031 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221219/18/atmos/gfs.t18z.pgrb2.0p25.f000 399402626-989950
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:05:06.054 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221219/18/atmos/gfs.t18z.pgrb2.0p25.f000 422682974-1171397
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:05:06.077 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221219/18/atmos/gfs.t18z.pgrb2.0p25.f000 410101849-875378
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:05:06.099 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221219/18/atmos/gfs.t18z.pgrb2.0p25.f000 209450878-718645
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:05:06.121 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221219/18/atmos/gfs.t18z.pgrb2.0p25.f000 295463736-857297
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]    Fetching GFS data:  14%|█▍        | 1/7 [00:00<00:01,  5.60it/s]    Fetching GFS data: 100%|██████████| 7/7 [00:00<00:00, 39.15it/s]
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:05:06.150 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221220/00/atmos/gfs.t00z.pgrb2.0p25.f000 331696727-829753
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:05:06.172 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221220/00/atmos/gfs.t00z.pgrb2.0p25.f000 253345828-804505
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:05:06.194 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221220/00/atmos/gfs.t00z.pgrb2.0p25.f000 400334303-985030
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:05:06.216 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221220/00/atmos/gfs.t00z.pgrb2.0p25.f000 210327553-720496
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:05:06.238 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221220/00/atmos/gfs.t00z.pgrb2.0p25.f000 423575610-1170377
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:05:06.260 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221220/00/atmos/gfs.t00z.pgrb2.0p25.f000 410972364-870639
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]                                                            2025-07-15 01:05:06.282 | DEBUG    | earth2studio.data.gfs:fetch_array:380 - Fetching GFS grib file: noaa-gfs-bdp-pds/gfs.20221220/00/atmos/gfs.t00z.pgrb2.0p25.f000 296814817-852960
    Fetching GFS data:   0%|          | 0/7 [00:00<?, ?it/s]    Fetching GFS data:  14%|█▍        | 1/7 [00:00<00:00,  6.51it/s]    Fetching GFS data: 100%|██████████| 7/7 [00:00<00:00, 45.53it/s]

    Running batch inference:   0%|          | 0/5 [00:00<?, ?it/s]
                                                                  2025-07-15 01:05:06.329 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:385 - Datetime64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:   0%|          | 0/5 [00:00<?, ?it/s]
                                                                  2025-07-15 01:05:06.329 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:391 - Timedelta64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:   0%|          | 0/5 [00:00<?, ?it/s]
    Running batch inference:  20%|██        | 1/5 [00:01<00:07,  1.94s/it]
                                                                          2025-07-15 01:05:08.341 | DEBUG    | earth2studio.io.async_zarr:_write:629 - Writing 1 chunks to 2 Zarr arrays

    Running batch inference:  20%|██        | 1/5 [00:02<00:07,  1.94s/it]
                                                                          2025-07-15 01:05:08.400 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:385 - Datetime64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  20%|██        | 1/5 [00:02<00:07,  1.94s/it]
                                                                          2025-07-15 01:05:08.401 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:391 - Timedelta64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  20%|██        | 1/5 [00:02<00:07,  1.94s/it]
    Running batch inference:  40%|████      | 2/5 [00:03<00:05,  1.98s/it]
                                                                          2025-07-15 01:05:10.336 | DEBUG    | earth2studio.io.async_zarr:_write:629 - Writing 1 chunks to 2 Zarr arrays

    Running batch inference:  40%|████      | 2/5 [00:04<00:05,  1.98s/it]
                                                                          2025-07-15 01:05:10.344 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:385 - Datetime64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  40%|████      | 2/5 [00:04<00:05,  1.98s/it]
                                                                          2025-07-15 01:05:10.345 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:391 - Timedelta64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  40%|████      | 2/5 [00:04<00:05,  1.98s/it]
    Running batch inference:  60%|██████    | 3/5 [00:05<00:03,  1.86s/it]
                                                                          2025-07-15 01:05:12.038 | DEBUG    | earth2studio.io.async_zarr:_write:629 - Writing 1 chunks to 2 Zarr arrays

    Running batch inference:  60%|██████    | 3/5 [00:05<00:03,  1.86s/it]
                                                                          2025-07-15 01:05:12.091 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:385 - Datetime64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  60%|██████    | 3/5 [00:05<00:03,  1.86s/it]
                                                                          2025-07-15 01:05:12.092 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:391 - Timedelta64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  60%|██████    | 3/5 [00:05<00:03,  1.86s/it]
    Running batch inference:  80%|████████  | 4/5 [00:08<00:02,  2.06s/it]
                                                                          2025-07-15 01:05:14.419 | DEBUG    | earth2studio.io.async_zarr:_write:629 - Writing 1 chunks to 2 Zarr arrays

    Running batch inference:  80%|████████  | 4/5 [00:08<00:02,  2.06s/it]
                                                                          2025-07-15 01:05:14.427 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:385 - Datetime64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  80%|████████  | 4/5 [00:08<00:02,  2.06s/it]
                                                                          2025-07-15 01:05:14.428 | WARNING  | earth2studio.io.async_zarr:_scrub_coordinates:391 - Timedelta64 not supported in zarr 3.0, converting to int64 nanoseconds since epoch

    Running batch inference:  80%|████████  | 4/5 [00:08<00:02,  2.06s/it]
    Running batch inference: 100%|██████████| 5/5 [00:09<00:00,  1.97s/it]
                                                                          2025-07-15 01:05:16.173 | DEBUG    | earth2studio.io.async_zarr:_limit_pool_size:495 - In IO thread pool throttle, limiting 
    2025-07-15 01:05:16.240 | DEBUG    | earth2studio.io.async_zarr:_write:629 - Writing 1 chunks to 2 Zarr arrays




.. GENERATED FROM PYTHON SOURCE LINES 444-448

Post-Processing
---------------
Lastly, we can plot the each of the local Zarr stores to verify that indeed they are
the same.

.. GENERATED FROM PYTHON SOURCE LINES 450-490

.. code-block:: Python

    import matplotlib.pyplot as plt
    import xarray as xr

    # Load the datasets
    ds_async = xr.open_zarr("outputs/17_io_async.zarr", consolidated=False)
    ds_nonblocking = xr.open_zarr(
        "outputs/17_io_nonblocking_async.zarr", consolidated=False
    )
    ds_sync = xr.open_zarr("outputs/17_io_sync.zarr")
    ds_nc = xr.open_dataset("outputs/17_io_sync.nc")

    # Create a 2x2 subplot grid
    fig, axes = plt.subplots(2, 2, figsize=(12, 8))
    fig.suptitle("Comparison of mean t2m across IO Backends")

    # Plot t2m from each dataset
    axes[0, 0].imshow(
        ds_async.t2m.isel(time=0, lead_time=8).mean(dim="ensemble"), vmin=250, vmax=320
    )
    axes[0, 0].set_title("Async Zarr")

    axes[0, 1].imshow(
        ds_nonblocking.t2m.isel(time=0, lead_time=8).mean(dim="ensemble"),
        vmin=250,
        vmax=320,
    )
    axes[0, 1].set_title("Non-blocking Async Zarr")

    axes[1, 0].imshow(
        ds_sync.t2m.isel(time=0, lead_time=8).mean(dim="ensemble"), vmin=250, vmax=320
    )
    axes[1, 0].set_title("Sync Zarr")

    axes[1, 1].imshow(
        ds_nc.t2m.isel(time=0, lead_time=8).mean(dim="ensemble"), vmin=250, vmax=320
    )
    axes[1, 1].set_title("NetCDF")

    plt.tight_layout()
    plt.savefig("outputs/17_io_performance.jpg", bbox_inches="tight")



.. image-sg:: /examples/images/sphx_glr_17_io_performance_001.png
   :alt: Comparison of mean t2m across IO Backends, Async Zarr, Non-blocking Async Zarr, Sync Zarr, NetCDF
   :srcset: /examples/images/sphx_glr_17_io_performance_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 34.019 seconds)


.. _sphx_glr_download_examples_17_io_performance.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: 17_io_performance.ipynb <17_io_performance.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: 17_io_performance.py <17_io_performance.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: 17_io_performance.zip <17_io_performance.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
