
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/06_model_perturbation_hook.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_06_model_perturbation_hook.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_06_model_perturbation_hook.py:


Model Hook Injection: Perturbation
==========================

Adding model noise by using custom hooks.

This example will demonstrate how to run an ensemble inference workflow to generate a
perturbed ensemble forecast. This perturbation is done by injecting code into the model
front and rear hooks.
These hooks are applied to the tensor data before/after the model forward call.

This example also illustrates how you can subselect data for IO. In this example we
will only output two variables:
total column water vapor (tcwv) and 500 hPa geopotential (z500).
To run this, make sure that the model selected predicts these variables are change
appropriately.

In this example you will learn:

- How to instantiate a built in prognostic model
- Creating a data source and IO object
- Changing the model forward/rear hooks
- Choose a subselection of coordinates to save to an IO object.
- Post-processing results

.. GENERATED FROM PYTHON SOURCE LINES 45-64

Creating an Ensemble Workflow
-----------------------------------

To start let's begin with creating an ensemble workflow to use. We encourage
users to explore and experiment with their own custom workflows that borrow ideas from
built in workflows inside :py:obj:`earth2studio.run` or the examples.

Creating our own generalizable ensemble workflow is easy when we rely on the component
interfaces defined in Earth2Studio (use dependency injection). Here we create a run
method that accepts the following:

- time: Input list of datetimes / strings to run inference for
- nsteps: Number of forecast steps to predict
- nensemble: Number of ensembles to run for
- prognostic: Our initialized prognostic model
- data: Initialized data source to fetch initial conditions from
- io: io store that data is written to.
- output_coords: CoordSystem of output coordinates that should be saved. Should be
  a proper subset of model output coordinates.

.. GENERATED FROM PYTHON SOURCE LINES 66-80

Set Up
------
With the ensemble workflow defined, we now need to create the individual components.

We need the following:

- Prognostic Model: Use the built in DLWP model :py:class:`earth2studio.models.px.DLWP`.
- Datasource: Pull data from the GFS data api :py:class:`earth2studio.data.GFS`.
- IO Backend: Save the outputs into a Zarr store :py:class:`earth2studio.io.ZarrBackend`.

We will first run the ensemble workflow using an unmodified function, that is a model that has the
default (identity) forward and rear hooks. Then we will define new hooks for the model and rerun the
inference request.
%%

.. GENERATED FROM PYTHON SOURCE LINES 80-105

.. code-block:: Python


    from dotenv import load_dotenv

    load_dotenv()  # TODO: make common example prep function

    import numpy as np

    from earth2studio.data import GFS
    from earth2studio.io import ZarrBackend
    from earth2studio.models.px import DLWP
    from earth2studio.perturbation import Gaussian
    from earth2studio.run import ensemble

    # Load the default model package which downloads the check point from NGC
    package = DLWP.load_default_package()
    model = DLWP.load_model(package)

    # Create the data source
    data = GFS()

    # Create the IO handler, store in memory
    chunks = {"ensemble": 1, "time": 1}
    io_unperturbed = ZarrBackend(file_name="outputs/05_ensemble.zarr", chunks=chunks)









.. GENERATED FROM PYTHON SOURCE LINES 106-114

Execute the Workflow
--------------------
First, we will run the ensemble workflow but with a :py:meth:`earth2studio.perturbation.Gaussian`
perturbation as the control.

The workflow will return the provided IO object back to the user, which can be used to
then post process. Some have additional APIs that can be handy for post-processing or
saving to file. Check the API docs for more information.

.. GENERATED FROM PYTHON SOURCE LINES 116-139

.. code-block:: Python

    nsteps = 4 * 12
    nensemble = 16
    batch_size = 4
    forecast_date = "2024-01-30"
    output_coords = {
        "lat": np.arange(25.0, 60.0, 0.25),
        "lon": np.arange(230.0, 300.0, 0.25),
        "variable": np.array(["tcwv", "z500"]),
    }

    # First run with no model perturbation
    io_unperturbed = ensemble(
        [forecast_date],
        nsteps,
        nensemble,
        model,
        data,
        io_unperturbed,
        Gaussian(noise_amplitude=0.01),
        output_coords=output_coords,
        batch_size=batch_size,
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    2024-05-28 06:01:37.010 | INFO     | earth2studio.run:ensemble:281 - Running ensemble inference!
    2024-05-28 06:01:37.010 | INFO     | earth2studio.run:ensemble:289 - Inference device: cuda
    2024-05-28 06:01:37.017 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:149 - Fetching GFS index file: 2024-01-29 18:00:00
    Fetching GFS for 2024-01-29 18:00:00:   0%|          | 0/7 [00:00<?, ?it/s]                                                                               2024-05-28 06:01:37.385 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:196 - Fetching GFS grib file for variable: t850 at 2024-01-29 18:00:00
    Fetching GFS for 2024-01-29 18:00:00:   0%|          | 0/7 [00:00<?, ?it/s]    Fetching GFS for 2024-01-29 18:00:00:  14%|█▍        | 1/7 [00:05<00:34,  5.80s/it]                                                                                       2024-05-28 06:01:43.183 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:196 - Fetching GFS grib file for variable: z1000 at 2024-01-29 18:00:00
    Fetching GFS for 2024-01-29 18:00:00:  14%|█▍        | 1/7 [00:05<00:34,  5.80s/it]    Fetching GFS for 2024-01-29 18:00:00:  29%|██▊       | 2/7 [00:09<00:22,  4.47s/it]                                                                                       2024-05-28 06:01:46.718 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:196 - Fetching GFS grib file for variable: z700 at 2024-01-29 18:00:00
    Fetching GFS for 2024-01-29 18:00:00:  29%|██▊       | 2/7 [00:09<00:22,  4.47s/it]    Fetching GFS for 2024-01-29 18:00:00:  43%|████▎     | 3/7 [00:11<00:13,  3.38s/it]                                                                                       2024-05-28 06:01:48.810 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:196 - Fetching GFS grib file for variable: z500 at 2024-01-29 18:00:00
    Fetching GFS for 2024-01-29 18:00:00:  43%|████▎     | 3/7 [00:11<00:13,  3.38s/it]    Fetching GFS for 2024-01-29 18:00:00:  57%|█████▋    | 4/7 [00:12<00:07,  2.61s/it]                                                                                       2024-05-28 06:01:50.224 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:196 - Fetching GFS grib file for variable: z300 at 2024-01-29 18:00:00
    Fetching GFS for 2024-01-29 18:00:00:  57%|█████▋    | 4/7 [00:12<00:07,  2.61s/it]    Fetching GFS for 2024-01-29 18:00:00:  71%|███████▏  | 5/7 [00:13<00:04,  2.04s/it]                                                                                       2024-05-28 06:01:51.261 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:196 - Fetching GFS grib file for variable: tcwv at 2024-01-29 18:00:00
    Fetching GFS for 2024-01-29 18:00:00:  71%|███████▏  | 5/7 [00:13<00:04,  2.04s/it]    Fetching GFS for 2024-01-29 18:00:00:  86%|████████▌ | 6/7 [00:14<00:01,  1.67s/it]                                                                                       2024-05-28 06:01:52.219 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:196 - Fetching GFS grib file for variable: t2m at 2024-01-29 18:00:00
    Fetching GFS for 2024-01-29 18:00:00:  86%|████████▌ | 6/7 [00:14<00:01,  1.67s/it]    Fetching GFS for 2024-01-29 18:00:00: 100%|██████████| 7/7 [00:15<00:00,  1.38s/it]    Fetching GFS for 2024-01-29 18:00:00: 100%|██████████| 7/7 [00:15<00:00,  2.23s/it]
    2024-05-28 06:01:53.003 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:149 - Fetching GFS index file: 2024-01-30 00:00:00
    Fetching GFS for 2024-01-30 00:00:00:   0%|          | 0/7 [00:00<?, ?it/s]                                                                               2024-05-28 06:01:53.105 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:196 - Fetching GFS grib file for variable: t850 at 2024-01-30 00:00:00
    Fetching GFS for 2024-01-30 00:00:00:   0%|          | 0/7 [00:00<?, ?it/s]    Fetching GFS for 2024-01-30 00:00:00:  14%|█▍        | 1/7 [00:00<00:04,  1.26it/s]                                                                                       2024-05-28 06:01:53.899 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:196 - Fetching GFS grib file for variable: z1000 at 2024-01-30 00:00:00
    Fetching GFS for 2024-01-30 00:00:00:  14%|█▍        | 1/7 [00:00<00:04,  1.26it/s]    Fetching GFS for 2024-01-30 00:00:00:  29%|██▊       | 2/7 [00:01<00:03,  1.36it/s]                                                                                       2024-05-28 06:01:54.598 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:196 - Fetching GFS grib file for variable: z700 at 2024-01-30 00:00:00
    Fetching GFS for 2024-01-30 00:00:00:  29%|██▊       | 2/7 [00:01<00:03,  1.36it/s]    Fetching GFS for 2024-01-30 00:00:00:  43%|████▎     | 3/7 [00:02<00:02,  1.43it/s]                                                                                       2024-05-28 06:01:55.253 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:196 - Fetching GFS grib file for variable: z500 at 2024-01-30 00:00:00
    Fetching GFS for 2024-01-30 00:00:00:  43%|████▎     | 3/7 [00:02<00:02,  1.43it/s]    Fetching GFS for 2024-01-30 00:00:00:  57%|█████▋    | 4/7 [00:02<00:01,  1.55it/s]                                                                                       2024-05-28 06:01:55.816 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:196 - Fetching GFS grib file for variable: z300 at 2024-01-30 00:00:00
    Fetching GFS for 2024-01-30 00:00:00:  57%|█████▋    | 4/7 [00:02<00:01,  1.55it/s]    Fetching GFS for 2024-01-30 00:00:00:  71%|███████▏  | 5/7 [00:03<00:01,  1.60it/s]                                                                                       2024-05-28 06:01:56.403 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:196 - Fetching GFS grib file for variable: tcwv at 2024-01-30 00:00:00
    Fetching GFS for 2024-01-30 00:00:00:  71%|███████▏  | 5/7 [00:03<00:01,  1.60it/s]    Fetching GFS for 2024-01-30 00:00:00:  86%|████████▌ | 6/7 [00:03<00:00,  1.64it/s]                                                                                       2024-05-28 06:01:56.981 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:196 - Fetching GFS grib file for variable: t2m at 2024-01-30 00:00:00
    Fetching GFS for 2024-01-30 00:00:00:  86%|████████▌ | 6/7 [00:03<00:00,  1.64it/s]    Fetching GFS for 2024-01-30 00:00:00: 100%|██████████| 7/7 [00:04<00:00,  1.72it/s]    Fetching GFS for 2024-01-30 00:00:00: 100%|██████████| 7/7 [00:04<00:00,  1.59it/s]
    2024-05-28 06:01:57.548 | SUCCESS  | earth2studio.run:ensemble:301 - Fetched data from GFS
    2024-05-28 06:01:57.554 | INFO     | earth2studio.run:ensemble:320 - Starting 16 Member Ensemble Inference with             4 number of batches.
    Total Ensemble Batches:   0%|          | 0/4 [00:00<?, ?it/s]
    Running batch 0 inference:   0%|          | 0/49 [00:00<?, ?it/s]
    Running batch 0 inference:   6%|▌         | 3/49 [00:00<00:01, 28.78it/s]
    Running batch 0 inference:  12%|█▏        | 6/49 [00:00<00:01, 23.70it/s]
    Running batch 0 inference:  18%|█▊        | 9/49 [00:00<00:01, 22.30it/s]
    Running batch 0 inference:  24%|██▍       | 12/49 [00:00<00:01, 19.97it/s]
    Running batch 0 inference:  31%|███       | 15/49 [00:00<00:01, 19.49it/s]
    Running batch 0 inference:  35%|███▍      | 17/49 [00:00<00:01, 18.80it/s]
    Running batch 0 inference:  39%|███▉      | 19/49 [00:00<00:01, 17.90it/s]
    Running batch 0 inference:  43%|████▎     | 21/49 [00:01<00:01, 17.11it/s]
    Running batch 0 inference:  47%|████▋     | 23/49 [00:01<00:01, 16.29it/s]
    Running batch 0 inference:  51%|█████     | 25/49 [00:01<00:01, 16.33it/s]
    Running batch 0 inference:  55%|█████▌    | 27/49 [00:01<00:01, 16.13it/s]
    Running batch 0 inference:  59%|█████▉    | 29/49 [00:01<00:01, 15.91it/s]
    Running batch 0 inference:  63%|██████▎   | 31/49 [00:01<00:01, 15.23it/s]
    Running batch 0 inference:  67%|██████▋   | 33/49 [00:01<00:01, 15.16it/s]
    Running batch 0 inference:  71%|███████▏  | 35/49 [00:02<00:00, 14.96it/s]
    Running batch 0 inference:  76%|███████▌  | 37/49 [00:02<00:00, 14.54it/s]
    Running batch 0 inference:  80%|███████▉  | 39/49 [00:02<00:00, 14.08it/s]
    Running batch 0 inference:  84%|████████▎ | 41/49 [00:02<00:00, 13.98it/s]
    Running batch 0 inference:  88%|████████▊ | 43/49 [00:02<00:00, 13.46it/s]
    Running batch 0 inference:  92%|█████████▏| 45/49 [00:02<00:00, 13.10it/s]
    Running batch 0 inference:  96%|█████████▌| 47/49 [00:02<00:00, 12.79it/s]
    Running batch 0 inference: 100%|██████████| 49/49 [00:03<00:00, 12.52it/s]
                                                                                  Total Ensemble Batches:  25%|██▌       | 1/4 [00:03<00:09,  3.15s/it]
    Running batch 4 inference:   0%|          | 0/49 [00:00<?, ?it/s]
    Running batch 4 inference:   6%|▌         | 3/49 [00:00<00:01, 25.77it/s]
    Running batch 4 inference:  12%|█▏        | 6/49 [00:00<00:01, 21.67it/s]
    Running batch 4 inference:  18%|█▊        | 9/49 [00:00<00:01, 21.12it/s]
    Running batch 4 inference:  24%|██▍       | 12/49 [00:00<00:01, 19.35it/s]
    Running batch 4 inference:  29%|██▊       | 14/49 [00:00<00:01, 18.65it/s]
    Running batch 4 inference:  33%|███▎      | 16/49 [00:00<00:01, 18.36it/s]
    Running batch 4 inference:  37%|███▋      | 18/49 [00:00<00:01, 17.64it/s]
    Running batch 4 inference:  41%|████      | 20/49 [00:01<00:01, 17.15it/s]
    Running batch 4 inference:  45%|████▍     | 22/49 [00:01<00:01, 16.94it/s]
    Running batch 4 inference:  49%|████▉     | 24/49 [00:01<00:01, 16.48it/s]
    Running batch 4 inference:  53%|█████▎    | 26/49 [00:01<00:01, 16.14it/s]
    Running batch 4 inference:  57%|█████▋    | 28/49 [00:01<00:01, 15.91it/s]
    Running batch 4 inference:  61%|██████    | 30/49 [00:01<00:01, 15.92it/s]
    Running batch 4 inference:  65%|██████▌   | 32/49 [00:01<00:01, 15.51it/s]
    Running batch 4 inference:  69%|██████▉   | 34/49 [00:01<00:00, 15.16it/s]
    Running batch 4 inference:  73%|███████▎  | 36/49 [00:02<00:00, 14.73it/s]
    Running batch 4 inference:  78%|███████▊  | 38/49 [00:02<00:00, 14.52it/s]
    Running batch 4 inference:  82%|████████▏ | 40/49 [00:02<00:00, 13.98it/s]
    Running batch 4 inference:  86%|████████▌ | 42/49 [00:02<00:00, 13.03it/s]
    Running batch 4 inference:  90%|████████▉ | 44/49 [00:02<00:00, 12.33it/s]
    Running batch 4 inference:  94%|█████████▍| 46/49 [00:02<00:00, 11.98it/s]
    Running batch 4 inference:  98%|█████████▊| 48/49 [00:03<00:00, 11.71it/s]
                                                                                  Total Ensemble Batches:  50%|█████     | 2/4 [00:06<00:06,  3.21s/it]
    Running batch 8 inference:   0%|          | 0/49 [00:00<?, ?it/s]
    Running batch 8 inference:   6%|▌         | 3/49 [00:00<00:01, 26.66it/s]
    Running batch 8 inference:  12%|█▏        | 6/49 [00:00<00:01, 22.85it/s]
    Running batch 8 inference:  18%|█▊        | 9/49 [00:00<00:01, 22.30it/s]
    Running batch 8 inference:  24%|██▍       | 12/49 [00:00<00:01, 19.79it/s]
    Running batch 8 inference:  31%|███       | 15/49 [00:00<00:01, 19.06it/s]
    Running batch 8 inference:  35%|███▍      | 17/49 [00:00<00:01, 18.32it/s]
    Running batch 8 inference:  39%|███▉      | 19/49 [00:00<00:01, 17.58it/s]
    Running batch 8 inference:  43%|████▎     | 21/49 [00:01<00:01, 17.02it/s]
    Running batch 8 inference:  47%|████▋     | 23/49 [00:01<00:01, 16.43it/s]
    Running batch 8 inference:  51%|█████     | 25/49 [00:01<00:01, 15.93it/s]
    Running batch 8 inference:  55%|█████▌    | 27/49 [00:01<00:01, 15.64it/s]
    Running batch 8 inference:  59%|█████▉    | 29/49 [00:01<00:01, 15.55it/s]
    Running batch 8 inference:  63%|██████▎   | 31/49 [00:01<00:01, 15.49it/s]
    Running batch 8 inference:  67%|██████▋   | 33/49 [00:01<00:01, 14.78it/s]
    Running batch 8 inference:  71%|███████▏  | 35/49 [00:02<00:00, 14.05it/s]
    Running batch 8 inference:  76%|███████▌  | 37/49 [00:02<00:00, 13.32it/s]
    Running batch 8 inference:  80%|███████▉  | 39/49 [00:02<00:00, 13.17it/s]
    Running batch 8 inference:  84%|████████▎ | 41/49 [00:02<00:00, 12.98it/s]
    Running batch 8 inference:  88%|████████▊ | 43/49 [00:02<00:00, 12.87it/s]
    Running batch 8 inference:  92%|█████████▏| 45/49 [00:02<00:00, 12.56it/s]
    Running batch 8 inference:  96%|█████████▌| 47/49 [00:03<00:00, 12.11it/s]
    Running batch 8 inference: 100%|██████████| 49/49 [00:03<00:00, 11.94it/s]
                                                                                  Total Ensemble Batches:  75%|███████▌  | 3/4 [00:09<00:03,  3.24s/it]
    Running batch 12 inference:   0%|          | 0/49 [00:00<?, ?it/s]
    Running batch 12 inference:   6%|▌         | 3/49 [00:00<00:01, 28.84it/s]
    Running batch 12 inference:  12%|█▏        | 6/49 [00:00<00:01, 22.40it/s]
    Running batch 12 inference:  18%|█▊        | 9/49 [00:00<00:01, 21.76it/s]
    Running batch 12 inference:  24%|██▍       | 12/49 [00:00<00:01, 19.35it/s]
    Running batch 12 inference:  29%|██▊       | 14/49 [00:00<00:01, 18.94it/s]
    Running batch 12 inference:  33%|███▎      | 16/49 [00:00<00:01, 18.45it/s]
    Running batch 12 inference:  37%|███▋      | 18/49 [00:00<00:01, 17.97it/s]
    Running batch 12 inference:  41%|████      | 20/49 [00:01<00:01, 17.37it/s]
    Running batch 12 inference:  45%|████▍     | 22/49 [00:01<00:01, 16.44it/s]
    Running batch 12 inference:  49%|████▉     | 24/49 [00:01<00:01, 16.14it/s]
    Running batch 12 inference:  53%|█████▎    | 26/49 [00:01<00:01, 15.67it/s]
    Running batch 12 inference:  57%|█████▋    | 28/49 [00:01<00:01, 15.49it/s]
    Running batch 12 inference:  61%|██████    | 30/49 [00:01<00:01, 15.29it/s]
    Running batch 12 inference:  65%|██████▌   | 32/49 [00:01<00:01, 15.16it/s]
    Running batch 12 inference:  69%|██████▉   | 34/49 [00:01<00:00, 15.04it/s]
    Running batch 12 inference:  73%|███████▎  | 36/49 [00:02<00:00, 14.76it/s]
    Running batch 12 inference:  78%|███████▊  | 38/49 [00:02<00:00, 13.93it/s]
    Running batch 12 inference:  82%|████████▏ | 40/49 [00:02<00:00, 13.45it/s]
    Running batch 12 inference:  86%|████████▌ | 42/49 [00:02<00:00, 13.04it/s]
    Running batch 12 inference:  90%|████████▉ | 44/49 [00:02<00:00, 12.69it/s]
    Running batch 12 inference:  94%|█████████▍| 46/49 [00:02<00:00, 12.54it/s]
    Running batch 12 inference:  98%|█████████▊| 48/49 [00:03<00:00, 12.02it/s]
                                                                                   Total Ensemble Batches: 100%|██████████| 4/4 [00:12<00:00,  3.24s/it]    Total Ensemble Batches: 100%|██████████| 4/4 [00:12<00:00,  3.23s/it]
    2024-05-28 06:02:10.462 | SUCCESS  | earth2studio.run:ensemble:365 - Inference complete




.. GENERATED FROM PYTHON SOURCE LINES 140-145

Now let's introduce slight model perturbation using the prognostic model hooks defined
in :py:class:`earth2studio.models.px.utils.PrognosticMixin`.
Note that :py:obj:`center.unsqueeze(-1)` is DLWP specific since it operates on a cubed sphere
with grid dimensions (nface, lat, lon) instead of just (lat,lon).
To switch out the model, consider removing the :py:meth:`unsqueeze` .

.. GENERATED FROM PYTHON SOURCE LINES 147-173

.. code-block:: Python

    model.front_hook = lambda x, coords: (
        x
        - 0.1
        * x.var(dim=0)
        * (x - model.center.unsqueeze(-1))
        / (model.scale.unsqueeze(-1)) ** 2
        + 0.1 * (x - x.mean(dim=0)),
        coords,
    )
    # Also could use model.rear_hook = ...

    io_perturbed = ZarrBackend(
        file_name="outputs/05_ensemble_model_perturbation.zarr", chunks=chunks
    )
    io_perturbed = ensemble(
        [forecast_date],
        nsteps,
        nensemble,
        model,
        data,
        io_perturbed,
        Gaussian(noise_amplitude=0.01),
        output_coords=output_coords,
        batch_size=batch_size,
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    2024-05-28 06:02:10.464 | INFO     | earth2studio.run:ensemble:281 - Running ensemble inference!
    2024-05-28 06:02:10.464 | INFO     | earth2studio.run:ensemble:289 - Inference device: cuda
    2024-05-28 06:02:10.464 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:149 - Fetching GFS index file: 2024-01-29 18:00:00
    Fetching GFS for 2024-01-29 18:00:00:   0%|          | 0/7 [00:00<?, ?it/s]                                                                               2024-05-28 06:02:10.803 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:196 - Fetching GFS grib file for variable: t850 at 2024-01-29 18:00:00
    Fetching GFS for 2024-01-29 18:00:00:   0%|          | 0/7 [00:00<?, ?it/s]                                                                               2024-05-28 06:02:10.825 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:196 - Fetching GFS grib file for variable: z1000 at 2024-01-29 18:00:00
    Fetching GFS for 2024-01-29 18:00:00:   0%|          | 0/7 [00:00<?, ?it/s]                                                                               2024-05-28 06:02:10.843 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:196 - Fetching GFS grib file for variable: z700 at 2024-01-29 18:00:00
    Fetching GFS for 2024-01-29 18:00:00:   0%|          | 0/7 [00:00<?, ?it/s]                                                                               2024-05-28 06:02:10.862 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:196 - Fetching GFS grib file for variable: z500 at 2024-01-29 18:00:00
    Fetching GFS for 2024-01-29 18:00:00:   0%|          | 0/7 [00:00<?, ?it/s]                                                                               2024-05-28 06:02:10.880 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:196 - Fetching GFS grib file for variable: z300 at 2024-01-29 18:00:00
    Fetching GFS for 2024-01-29 18:00:00:   0%|          | 0/7 [00:00<?, ?it/s]                                                                               2024-05-28 06:02:10.897 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:196 - Fetching GFS grib file for variable: tcwv at 2024-01-29 18:00:00
    Fetching GFS for 2024-01-29 18:00:00:   0%|          | 0/7 [00:00<?, ?it/s]    Fetching GFS for 2024-01-29 18:00:00:  86%|████████▌ | 6/7 [00:00<00:00, 53.58it/s]                                                                                       2024-05-28 06:02:10.915 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:196 - Fetching GFS grib file for variable: t2m at 2024-01-29 18:00:00
    Fetching GFS for 2024-01-29 18:00:00:  86%|████████▌ | 6/7 [00:00<00:00, 53.58it/s]    Fetching GFS for 2024-01-29 18:00:00: 100%|██████████| 7/7 [00:00<00:00, 53.85it/s]
    2024-05-28 06:02:10.940 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:149 - Fetching GFS index file: 2024-01-30 00:00:00
    Fetching GFS for 2024-01-30 00:00:00:   0%|          | 0/7 [00:00<?, ?it/s]                                                                               2024-05-28 06:02:11.032 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:196 - Fetching GFS grib file for variable: t850 at 2024-01-30 00:00:00
    Fetching GFS for 2024-01-30 00:00:00:   0%|          | 0/7 [00:00<?, ?it/s]                                                                               2024-05-28 06:02:11.053 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:196 - Fetching GFS grib file for variable: z1000 at 2024-01-30 00:00:00
    Fetching GFS for 2024-01-30 00:00:00:   0%|          | 0/7 [00:00<?, ?it/s]                                                                               2024-05-28 06:02:11.071 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:196 - Fetching GFS grib file for variable: z700 at 2024-01-30 00:00:00
    Fetching GFS for 2024-01-30 00:00:00:   0%|          | 0/7 [00:00<?, ?it/s]                                                                               2024-05-28 06:02:11.089 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:196 - Fetching GFS grib file for variable: z500 at 2024-01-30 00:00:00
    Fetching GFS for 2024-01-30 00:00:00:   0%|          | 0/7 [00:00<?, ?it/s]                                                                               2024-05-28 06:02:11.106 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:196 - Fetching GFS grib file for variable: z300 at 2024-01-30 00:00:00
    Fetching GFS for 2024-01-30 00:00:00:   0%|          | 0/7 [00:00<?, ?it/s]                                                                               2024-05-28 06:02:11.124 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:196 - Fetching GFS grib file for variable: tcwv at 2024-01-30 00:00:00
    Fetching GFS for 2024-01-30 00:00:00:   0%|          | 0/7 [00:00<?, ?it/s]    Fetching GFS for 2024-01-30 00:00:00:  86%|████████▌ | 6/7 [00:00<00:00, 54.33it/s]                                                                                       2024-05-28 06:02:11.143 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:196 - Fetching GFS grib file for variable: t2m at 2024-01-30 00:00:00
    Fetching GFS for 2024-01-30 00:00:00:  86%|████████▌ | 6/7 [00:00<00:00, 54.33it/s]    Fetching GFS for 2024-01-30 00:00:00: 100%|██████████| 7/7 [00:00<00:00, 54.56it/s]
    2024-05-28 06:02:11.203 | SUCCESS  | earth2studio.run:ensemble:301 - Fetched data from GFS
    2024-05-28 06:02:11.208 | INFO     | earth2studio.run:ensemble:320 - Starting 16 Member Ensemble Inference with             4 number of batches.
    Total Ensemble Batches:   0%|          | 0/4 [00:00<?, ?it/s]
    Running batch 0 inference:   0%|          | 0/49 [00:00<?, ?it/s]
    Running batch 0 inference:   6%|▌         | 3/49 [00:00<00:01, 29.29it/s]
    Running batch 0 inference:  12%|█▏        | 6/49 [00:00<00:01, 24.23it/s]
    Running batch 0 inference:  18%|█▊        | 9/49 [00:00<00:01, 23.61it/s]
    Running batch 0 inference:  24%|██▍       | 12/49 [00:00<00:01, 20.16it/s]
    Running batch 0 inference:  31%|███       | 15/49 [00:00<00:01, 19.23it/s]
    Running batch 0 inference:  35%|███▍      | 17/49 [00:00<00:01, 18.08it/s]
    Running batch 0 inference:  39%|███▉      | 19/49 [00:00<00:01, 17.04it/s]
    Running batch 0 inference:  43%|████▎     | 21/49 [00:01<00:01, 16.21it/s]
    Running batch 0 inference:  47%|████▋     | 23/49 [00:01<00:01, 15.83it/s]
    Running batch 0 inference:  51%|█████     | 25/49 [00:01<00:01, 15.96it/s]
    Running batch 0 inference:  55%|█████▌    | 27/49 [00:01<00:01, 15.25it/s]
    Running batch 0 inference:  59%|█████▉    | 29/49 [00:01<00:01, 14.71it/s]
    Running batch 0 inference:  63%|██████▎   | 31/49 [00:01<00:01, 14.55it/s]
    Running batch 0 inference:  67%|██████▋   | 33/49 [00:01<00:01, 14.20it/s]
    Running batch 0 inference:  71%|███████▏  | 35/49 [00:02<00:00, 14.10it/s]
    Running batch 0 inference:  76%|███████▌  | 37/49 [00:02<00:00, 13.97it/s]
    Running batch 0 inference:  80%|███████▉  | 39/49 [00:02<00:00, 13.26it/s]
    Running batch 0 inference:  84%|████████▎ | 41/49 [00:02<00:00, 12.85it/s]
    Running batch 0 inference:  88%|████████▊ | 43/49 [00:02<00:00, 12.55it/s]
    Running batch 0 inference:  92%|█████████▏| 45/49 [00:02<00:00, 12.21it/s]
    Running batch 0 inference:  96%|█████████▌| 47/49 [00:03<00:00, 12.27it/s]
    Running batch 0 inference: 100%|██████████| 49/49 [00:03<00:00, 12.19it/s]
                                                                                  Total Ensemble Batches:  25%|██▌       | 1/4 [00:03<00:09,  3.28s/it]
    Running batch 4 inference:   0%|          | 0/49 [00:00<?, ?it/s]
    Running batch 4 inference:   6%|▌         | 3/49 [00:00<00:01, 29.99it/s]
    Running batch 4 inference:  12%|█▏        | 6/49 [00:00<00:01, 24.00it/s]
    Running batch 4 inference:  18%|█▊        | 9/49 [00:00<00:01, 22.53it/s]
    Running batch 4 inference:  24%|██▍       | 12/49 [00:00<00:01, 20.18it/s]
    Running batch 4 inference:  31%|███       | 15/49 [00:00<00:01, 19.34it/s]
    Running batch 4 inference:  35%|███▍      | 17/49 [00:00<00:01, 18.33it/s]
    Running batch 4 inference:  39%|███▉      | 19/49 [00:00<00:01, 17.53it/s]
    Running batch 4 inference:  43%|████▎     | 21/49 [00:01<00:01, 17.00it/s]
    Running batch 4 inference:  47%|████▋     | 23/49 [00:01<00:01, 16.70it/s]
    Running batch 4 inference:  51%|█████     | 25/49 [00:01<00:01, 16.59it/s]
    Running batch 4 inference:  55%|█████▌    | 27/49 [00:01<00:01, 16.32it/s]
    Running batch 4 inference:  59%|█████▉    | 29/49 [00:01<00:01, 16.14it/s]
    Running batch 4 inference:  63%|██████▎   | 31/49 [00:01<00:01, 15.10it/s]
    Running batch 4 inference:  67%|██████▋   | 33/49 [00:01<00:01, 14.88it/s]
    Running batch 4 inference:  71%|███████▏  | 35/49 [00:02<00:00, 14.51it/s]
    Running batch 4 inference:  76%|███████▌  | 37/49 [00:02<00:00, 13.87it/s]
    Running batch 4 inference:  80%|███████▉  | 39/49 [00:02<00:00, 13.36it/s]
    Running batch 4 inference:  84%|████████▎ | 41/49 [00:02<00:00, 12.92it/s]
    Running batch 4 inference:  88%|████████▊ | 43/49 [00:02<00:00, 12.72it/s]
    Running batch 4 inference:  92%|█████████▏| 45/49 [00:02<00:00, 12.22it/s]
    Running batch 4 inference:  96%|█████████▌| 47/49 [00:03<00:00, 12.28it/s]
    Running batch 4 inference: 100%|██████████| 49/49 [00:03<00:00, 12.14it/s]
                                                                                  Total Ensemble Batches:  50%|█████     | 2/4 [00:06<00:06,  3.25s/it]
    Running batch 8 inference:   0%|          | 0/49 [00:00<?, ?it/s]
    Running batch 8 inference:   8%|▊         | 4/49 [00:00<00:01, 25.64it/s]
    Running batch 8 inference:  14%|█▍        | 7/49 [00:00<00:01, 22.79it/s]
    Running batch 8 inference:  20%|██        | 10/49 [00:00<00:01, 19.87it/s]
    Running batch 8 inference:  27%|██▋       | 13/49 [00:00<00:01, 19.56it/s]
    Running batch 8 inference:  31%|███       | 15/49 [00:00<00:01, 18.73it/s]
    Running batch 8 inference:  35%|███▍      | 17/49 [00:00<00:01, 18.28it/s]
    Running batch 8 inference:  39%|███▉      | 19/49 [00:01<00:01, 17.13it/s]
    Running batch 8 inference:  43%|████▎     | 21/49 [00:01<00:01, 16.66it/s]
    Running batch 8 inference:  47%|████▋     | 23/49 [00:01<00:01, 16.25it/s]
    Running batch 8 inference:  51%|█████     | 25/49 [00:01<00:01, 15.95it/s]
    Running batch 8 inference:  55%|█████▌    | 27/49 [00:01<00:01, 15.68it/s]
    Running batch 8 inference:  59%|█████▉    | 29/49 [00:01<00:01, 15.10it/s]
    Running batch 8 inference:  63%|██████▎   | 31/49 [00:01<00:01, 14.81it/s]
    Running batch 8 inference:  67%|██████▋   | 33/49 [00:01<00:01, 14.91it/s]
    Running batch 8 inference:  71%|███████▏  | 35/49 [00:02<00:00, 14.44it/s]
    Running batch 8 inference:  76%|███████▌  | 37/49 [00:02<00:00, 14.09it/s]
    Running batch 8 inference:  80%|███████▉  | 39/49 [00:02<00:00, 13.68it/s]
    Running batch 8 inference:  84%|████████▎ | 41/49 [00:02<00:00, 13.21it/s]
    Running batch 8 inference:  88%|████████▊ | 43/49 [00:02<00:00, 12.90it/s]
    Running batch 8 inference:  92%|█████████▏| 45/49 [00:02<00:00, 12.64it/s]
    Running batch 8 inference:  96%|█████████▌| 47/49 [00:03<00:00, 12.29it/s]
    Running batch 8 inference: 100%|██████████| 49/49 [00:03<00:00, 12.01it/s]
                                                                                  Total Ensemble Batches:  75%|███████▌  | 3/4 [00:09<00:03,  3.26s/it]
    Running batch 12 inference:   0%|          | 0/49 [00:00<?, ?it/s]
    Running batch 12 inference:   6%|▌         | 3/49 [00:00<00:01, 28.71it/s]
    Running batch 12 inference:  12%|█▏        | 6/49 [00:00<00:01, 22.50it/s]
    Running batch 12 inference:  18%|█▊        | 9/49 [00:00<00:01, 21.41it/s]
    Running batch 12 inference:  24%|██▍       | 12/49 [00:00<00:01, 19.59it/s]
    Running batch 12 inference:  31%|███       | 15/49 [00:00<00:01, 19.38it/s]
    Running batch 12 inference:  35%|███▍      | 17/49 [00:00<00:01, 18.43it/s]
    Running batch 12 inference:  39%|███▉      | 19/49 [00:00<00:01, 17.82it/s]
    Running batch 12 inference:  43%|████▎     | 21/49 [00:01<00:01, 17.33it/s]
    Running batch 12 inference:  47%|████▋     | 23/49 [00:01<00:01, 17.58it/s]
    Running batch 12 inference:  51%|█████     | 25/49 [00:01<00:01, 16.83it/s]
    Running batch 12 inference:  55%|█████▌    | 27/49 [00:01<00:01, 16.13it/s]
    Running batch 12 inference:  59%|█████▉    | 29/49 [00:01<00:01, 15.62it/s]
    Running batch 12 inference:  63%|██████▎   | 31/49 [00:01<00:01, 15.22it/s]
    Running batch 12 inference:  67%|██████▋   | 33/49 [00:01<00:01, 15.05it/s]
    Running batch 12 inference:  71%|███████▏  | 35/49 [00:02<00:00, 14.72it/s]
    Running batch 12 inference:  76%|███████▌  | 37/49 [00:02<00:00, 14.29it/s]
    Running batch 12 inference:  80%|███████▉  | 39/49 [00:02<00:00, 14.24it/s]
    Running batch 12 inference:  84%|████████▎ | 41/49 [00:02<00:00, 13.49it/s]
    Running batch 12 inference:  88%|████████▊ | 43/49 [00:02<00:00, 13.27it/s]
    Running batch 12 inference:  92%|█████████▏| 45/49 [00:02<00:00, 13.01it/s]
    Running batch 12 inference:  96%|█████████▌| 47/49 [00:02<00:00, 12.42it/s]
    Running batch 12 inference: 100%|██████████| 49/49 [00:03<00:00, 12.09it/s]
                                                                                   Total Ensemble Batches: 100%|██████████| 4/4 [00:12<00:00,  3.23s/it]    Total Ensemble Batches: 100%|██████████| 4/4 [00:12<00:00,  3.24s/it]
    2024-05-28 06:02:24.175 | SUCCESS  | earth2studio.run:ensemble:365 - Inference complete




.. GENERATED FROM PYTHON SOURCE LINES 174-181

Post Processing
---------------
The last step is to post process our results.
Here we plot and compare the ensemble mean and standard deviation from using an
unperturbed/perturbed model.

Notice that the Zarr IO function has additional APIs to interact with the stored data.

.. GENERATED FROM PYTHON SOURCE LINES 183-318

.. code-block:: Python

    import cartopy.crs as ccrs
    import matplotlib.pyplot as plt
    from matplotlib.colors import LogNorm

    levels_unperturbed = np.linspace(0, io_unperturbed["tcwv"][:].max())
    levels_perturbed = np.linspace(0, io_perturbed["tcwv"][:].max())


    std_levels_perturbed = np.linspace(0, io_perturbed["tcwv"][:].std(axis=0).max())

    plt.close("all")
    fig = plt.figure(figsize=(20, 10), tight_layout=True)
    ax0 = fig.add_subplot(2, 2, 1, projection=ccrs.PlateCarree())
    ax1 = fig.add_subplot(2, 2, 2, projection=ccrs.PlateCarree())
    ax2 = fig.add_subplot(2, 2, 3, projection=ccrs.PlateCarree())
    ax3 = fig.add_subplot(2, 2, 4, projection=ccrs.PlateCarree())


    def update(frame):
        """This function updates the frame with a new lead time for animation."""
        import warnings

        warnings.filterwarnings("ignore")
        ax0.clear()
        ax1.clear()
        ax2.clear()
        ax3.clear()

        ## Update unperturbed image
        im0 = ax0.contourf(
            io_unperturbed["lon"][:],
            io_unperturbed["lat"][:],
            io_unperturbed["tcwv"][:, 0, frame].mean(axis=0),
            transform=ccrs.PlateCarree(),
            cmap="Blues",
            levels=levels_unperturbed,
        )
        ax0.coastlines()
        ax0.gridlines()

        im1 = ax1.contourf(
            io_unperturbed["lon"][:],
            io_unperturbed["lat"][:],
            io_unperturbed["tcwv"][:, 0, frame].std(axis=0),
            transform=ccrs.PlateCarree(),
            cmap="RdPu",
            levels=std_levels_perturbed,
            norm=LogNorm(vmin=1e-1, vmax=std_levels_perturbed[-1]),
        )
        ax1.coastlines()
        ax1.gridlines()

        im2 = ax2.contourf(
            io_perturbed["lon"][:],
            io_perturbed["lat"][:],
            io_perturbed["tcwv"][:, 0, frame].mean(axis=0),
            transform=ccrs.PlateCarree(),
            cmap="Blues",
            levels=levels_perturbed,
        )
        ax2.coastlines()
        ax2.gridlines()

        im3 = ax3.contourf(
            io_perturbed["lon"][:],
            io_perturbed["lat"][:],
            io_perturbed["tcwv"][:, 0, frame].std(axis=0),
            transform=ccrs.PlateCarree(),
            cmap="RdPu",
            levels=std_levels_perturbed,
            norm=LogNorm(vmin=1e-1, vmax=std_levels_perturbed[-1]),
        )
        ax3.coastlines()
        ax3.gridlines()

        for i in range(16):
            ax0.contour(
                io_unperturbed["lon"][:],
                io_unperturbed["lat"][:],
                io_unperturbed["z500"][i, 0, frame] / 100.0,
                transform=ccrs.PlateCarree(),
                levels=np.arange(485, 580, 15),
                colors="black",
                linestyle="dashed",
            )

            ax2.contour(
                io_perturbed["lon"][:],
                io_perturbed["lat"][:],
                io_perturbed["z500"][i, 0, frame] / 100.0,
                transform=ccrs.PlateCarree(),
                levels=np.arange(485, 580, 15),
                colors="black",
                linestyle="dashed",
            )
        plt.suptitle(
            f'Forecast Starting on {forecast_date} - Lead Time - {io_perturbed["lead_time"][frame]}'
        )

        ax0.set_title("Unperturbed Ensemble Mean - tcwv + z500 countors")
        ax1.set_title("Unperturbed Ensemble Std - tcwv")
        ax2.set_title("Perturbed Ensemble Mean - tcwv + z500 contours")
        ax3.set_title("Perturbed Ensemble Std - tcwv")

        if frame == 0:
            plt.colorbar(
                im0, ax=ax0, shrink=0.75, pad=0.04, label="kg m^-2", format="%2.1f"
            )
            plt.colorbar(
                im1, ax=ax1, shrink=0.75, pad=0.04, label="kg m^-2", format="%1.2e"
            )
            plt.colorbar(
                im2, ax=ax2, shrink=0.75, pad=0.04, label="kg m^-2", format="%2.1f"
            )
            plt.colorbar(
                im3, ax=ax3, shrink=0.75, pad=0.04, label="kg m^-2", format="%1.2e"
            )


    # Uncomment this for animation
    # import matplotlib.animation as animation
    # update(0)
    # ani = animation.FuncAnimation(
    # fig=fig, func=update, frames=range(1, nsteps), cache_frame_data=False
    # )
    # ani.save(f"outputs/05_model_perturbation_{forecast_date}.gif", dpi=300)


    for lt in [10, 20, 30, 40]:
        update(lt)
        plt.savefig(
            f"outputs/05_model_perturbation_{forecast_date}_leadtime_{lt}.png",
            dpi=300,
            bbox_inches="tight",
        )



.. image-sg:: /examples/images/sphx_glr_06_model_perturbation_hook_001.png
   :alt: Forecast Starting on 2024-01-30 - Lead Time - 240 hours, Unperturbed Ensemble Mean - tcwv + z500 countors, Unperturbed Ensemble Std - tcwv, Perturbed Ensemble Mean - tcwv + z500 contours, Perturbed Ensemble Std - tcwv
   :srcset: /examples/images/sphx_glr_06_model_perturbation_hook_001.png, /examples/images/sphx_glr_06_model_perturbation_hook_001_2_00x.png 2.00x
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 56.091 seconds)


.. _sphx_glr_download_examples_06_model_perturbation_hook.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: 06_model_perturbation_hook.ipynb <06_model_perturbation_hook.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: 06_model_perturbation_hook.py <06_model_perturbation_hook.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
