
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/02_diagnostic_workflow.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_02_diagnostic_workflow.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_02_diagnostic_workflow.py:


Running Diagnostic Inference
============================

Basic prognostic + diagnostic inference workflow.

This example will demonstrate how to run a deterministic inference workflow that couples
a prognostic model with a diagnostic model. This diagnostic model will predict a new
atmospheric quantity from the predicted fields of the prognostic.

In this example you will learn:

- How to instantiate a prognostic model
- How to instantiate a diagnostic model
- Creating a data source and IO object
- Running the built in diagnostic workflow
- Post-processing results

.. GENERATED FROM PYTHON SOURCE LINES 38-42

Set Up
------
For this example, the built in diagnostic workflow :py:meth:`earth2studio.run.diagnostic`
will be used.

.. GENERATED FROM PYTHON SOURCE LINES 44-48

.. literalinclude:: ../../earth2studio/run.py
   :language: python
   :start-after: # sphinx - diagnostic start
   :end-before: # sphinx - diagnostic end

.. GENERATED FROM PYTHON SOURCE LINES 51-57

Thus, we need the following:

- Prognostic Model: Use the built in FourCastNet Model :py:class:`earth2studio.models.px.FCN`.
- Diagnostic Model: Use the built in precipitation AFNO model :py:class:`earth2studio.models.dx.PrecipitationAFNO`.
- Datasource: Pull data from the GFS data api :py:class:`earth2studio.data.GFS`.
- IO Backend: Save the outputs into a Zarr store :py:class:`earth2studio.io.ZarrBackend`.

.. GENERATED FROM PYTHON SOURCE LINES 59-84

.. code-block:: Python

    import os

    os.makedirs("outputs", exist_ok=True)
    from dotenv import load_dotenv

    load_dotenv()  # TODO: make common example prep function

    from earth2studio.data import GFS
    from earth2studio.io import ZarrBackend
    from earth2studio.models.dx import PrecipitationAFNO
    from earth2studio.models.px import FCN

    # Load the default model package which downloads the check point from NGC
    package = FCN.load_default_package()
    prognostic_model = FCN.load_model(package)

    package = PrecipitationAFNO.load_default_package()
    diagnostic_model = PrecipitationAFNO.load_model(package)

    # Create the data source
    data = GFS()

    # Create the IO handler, store in memory
    io = ZarrBackend()








.. GENERATED FROM PYTHON SOURCE LINES 85-91

Execute the Workflow
--------------------
With all components initialized, running the workflow is a single line of Python code.
Workflow will return the provided IO object back to the user, which can be used to
then post process. Some have additional APIs that can be handy for post-processing or
saving to file. Check the API docs for more information.

.. GENERATED FROM PYTHON SOURCE LINES 93-102

.. code-block:: Python

    import earth2studio.run as run

    nsteps = 8
    io = run.diagnostic(
        ["2021-06-01"], nsteps, prognostic_model, diagnostic_model, data, io
    )

    print(io.root.tree())





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    2024-07-05 22:00:37.542 | INFO     | earth2studio.run:diagnostic:179 - Running diagnostic workflow!
    2024-07-05 22:00:37.542 | INFO     | earth2studio.run:diagnostic:186 - Inference device: cuda
    2024-07-05 22:00:37.589 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:149 - Fetching GFS index file: 2021-06-01 00:00:00
    Fetching GFS for 2021-06-01 00:00:00:   0%|          | 0/26 [00:00<?, ?it/s]                                                                                2024-07-05 22:00:37.889 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:196 - Fetching GFS grib file for variable: u10m at 2021-06-01 00:00:00
    Fetching GFS for 2021-06-01 00:00:00:   0%|          | 0/26 [00:00<?, ?it/s]    Fetching GFS for 2021-06-01 00:00:00:   4%|▍         | 1/26 [00:00<00:21,  1.19it/s]                                                                                        2024-07-05 22:00:38.731 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:196 - Fetching GFS grib file for variable: v10m at 2021-06-01 00:00:00
    Fetching GFS for 2021-06-01 00:00:00:   4%|▍         | 1/26 [00:00<00:21,  1.19it/s]    Fetching GFS for 2021-06-01 00:00:00:   8%|▊         | 2/26 [00:01<00:11,  2.01it/s]                                                                                        2024-07-05 22:00:38.989 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:196 - Fetching GFS grib file for variable: t2m at 2021-06-01 00:00:00
    Fetching GFS for 2021-06-01 00:00:00:   8%|▊         | 2/26 [00:01<00:11,  2.01it/s]    Fetching GFS for 2021-06-01 00:00:00:  12%|█▏        | 3/26 [00:01<00:09,  2.37it/s]                                                                                        2024-07-05 22:00:39.321 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:196 - Fetching GFS grib file for variable: sp at 2021-06-01 00:00:00
    Fetching GFS for 2021-06-01 00:00:00:  12%|█▏        | 3/26 [00:01<00:09,  2.37it/s]    Fetching GFS for 2021-06-01 00:00:00:  15%|█▌        | 4/26 [00:01<00:09,  2.42it/s]                                                                                        2024-07-05 22:00:39.722 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:196 - Fetching GFS grib file for variable: msl at 2021-06-01 00:00:00
    Fetching GFS for 2021-06-01 00:00:00:  15%|█▌        | 4/26 [00:01<00:09,  2.42it/s]    Fetching GFS for 2021-06-01 00:00:00:  19%|█▉        | 5/26 [00:02<00:08,  2.50it/s]                                                                                        2024-07-05 22:00:40.097 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:196 - Fetching GFS grib file for variable: t850 at 2021-06-01 00:00:00
    Fetching GFS for 2021-06-01 00:00:00:  19%|█▉        | 5/26 [00:02<00:08,  2.50it/s]    Fetching GFS for 2021-06-01 00:00:00:  23%|██▎       | 6/26 [00:02<00:07,  2.73it/s]                                                                                        2024-07-05 22:00:40.396 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:196 - Fetching GFS grib file for variable: u1000 at 2021-06-01 00:00:00
    Fetching GFS for 2021-06-01 00:00:00:  23%|██▎       | 6/26 [00:02<00:07,  2.73it/s]    Fetching GFS for 2021-06-01 00:00:00:  27%|██▋       | 7/26 [00:02<00:06,  2.81it/s]                                                                                        2024-07-05 22:00:40.731 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:196 - Fetching GFS grib file for variable: v1000 at 2021-06-01 00:00:00
    Fetching GFS for 2021-06-01 00:00:00:  27%|██▋       | 7/26 [00:02<00:06,  2.81it/s]    Fetching GFS for 2021-06-01 00:00:00:  31%|███       | 8/26 [00:03<00:05,  3.08it/s]                                                                                        2024-07-05 22:00:40.988 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:196 - Fetching GFS grib file for variable: z1000 at 2021-06-01 00:00:00
    Fetching GFS for 2021-06-01 00:00:00:  31%|███       | 8/26 [00:03<00:05,  3.08it/s]    Fetching GFS for 2021-06-01 00:00:00:  35%|███▍      | 9/26 [00:03<00:05,  3.27it/s]                                                                                        2024-07-05 22:00:41.252 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:196 - Fetching GFS grib file for variable: u850 at 2021-06-01 00:00:00
    Fetching GFS for 2021-06-01 00:00:00:  35%|███▍      | 9/26 [00:03<00:05,  3.27it/s]    Fetching GFS for 2021-06-01 00:00:00:  38%|███▊      | 10/26 [00:03<00:05,  3.02it/s]                                                                                         2024-07-05 22:00:41.642 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:196 - Fetching GFS grib file for variable: v850 at 2021-06-01 00:00:00
    Fetching GFS for 2021-06-01 00:00:00:  38%|███▊      | 10/26 [00:03<00:05,  3.02it/s]    Fetching GFS for 2021-06-01 00:00:00:  42%|████▏     | 11/26 [00:04<00:04,  3.24it/s]                                                                                         2024-07-05 22:00:41.900 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:196 - Fetching GFS grib file for variable: z850 at 2021-06-01 00:00:00
    Fetching GFS for 2021-06-01 00:00:00:  42%|████▏     | 11/26 [00:04<00:04,  3.24it/s]    Fetching GFS for 2021-06-01 00:00:00:  46%|████▌     | 12/26 [00:04<00:04,  3.06it/s]                                                                                         2024-07-05 22:00:42.266 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:196 - Fetching GFS grib file for variable: u500 at 2021-06-01 00:00:00
    Fetching GFS for 2021-06-01 00:00:00:  46%|████▌     | 12/26 [00:04<00:04,  3.06it/s]    Fetching GFS for 2021-06-01 00:00:00:  50%|█████     | 13/26 [00:04<00:04,  3.02it/s]                                                                                         2024-07-05 22:00:42.608 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:196 - Fetching GFS grib file for variable: v500 at 2021-06-01 00:00:00
    Fetching GFS for 2021-06-01 00:00:00:  50%|█████     | 13/26 [00:04<00:04,  3.02it/s]    Fetching GFS for 2021-06-01 00:00:00:  54%|█████▍    | 14/26 [00:04<00:03,  3.20it/s]                                                                                         2024-07-05 22:00:42.878 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:196 - Fetching GFS grib file for variable: z500 at 2021-06-01 00:00:00
    Fetching GFS for 2021-06-01 00:00:00:  54%|█████▍    | 14/26 [00:04<00:03,  3.20it/s]    Fetching GFS for 2021-06-01 00:00:00:  58%|█████▊    | 15/26 [00:05<00:03,  3.25it/s]                                                                                         2024-07-05 22:00:43.173 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:196 - Fetching GFS grib file for variable: t500 at 2021-06-01 00:00:00
    Fetching GFS for 2021-06-01 00:00:00:  58%|█████▊    | 15/26 [00:05<00:03,  3.25it/s]    Fetching GFS for 2021-06-01 00:00:00:  62%|██████▏   | 16/26 [00:05<00:02,  3.44it/s]                                                                                         2024-07-05 22:00:43.424 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:196 - Fetching GFS grib file for variable: z50 at 2021-06-01 00:00:00
    Fetching GFS for 2021-06-01 00:00:00:  62%|██████▏   | 16/26 [00:05<00:02,  3.44it/s]    Fetching GFS for 2021-06-01 00:00:00:  65%|██████▌   | 17/26 [00:05<00:02,  3.40it/s]                                                                                         2024-07-05 22:00:43.727 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:196 - Fetching GFS grib file for variable: r500 at 2021-06-01 00:00:00
    Fetching GFS for 2021-06-01 00:00:00:  65%|██████▌   | 17/26 [00:05<00:02,  3.40it/s]    Fetching GFS for 2021-06-01 00:00:00:  69%|██████▉   | 18/26 [00:06<00:02,  3.45it/s]                                                                                         2024-07-05 22:00:44.007 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:196 - Fetching GFS grib file for variable: r850 at 2021-06-01 00:00:00
    Fetching GFS for 2021-06-01 00:00:00:  69%|██████▉   | 18/26 [00:06<00:02,  3.45it/s]    Fetching GFS for 2021-06-01 00:00:00:  73%|███████▎  | 19/26 [00:06<00:01,  3.58it/s]                                                                                         2024-07-05 22:00:44.261 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:196 - Fetching GFS grib file for variable: tcwv at 2021-06-01 00:00:00
    Fetching GFS for 2021-06-01 00:00:00:  73%|███████▎  | 19/26 [00:06<00:01,  3.58it/s]    Fetching GFS for 2021-06-01 00:00:00:  77%|███████▋  | 20/26 [00:06<00:01,  3.28it/s]                                                                                         2024-07-05 22:00:44.625 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:196 - Fetching GFS grib file for variable: u100m at 2021-06-01 00:00:00
    Fetching GFS for 2021-06-01 00:00:00:  77%|███████▋  | 20/26 [00:06<00:01,  3.28it/s]    Fetching GFS for 2021-06-01 00:00:00:  81%|████████  | 21/26 [00:07<00:01,  2.82it/s]                                                                                         2024-07-05 22:00:45.096 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:196 - Fetching GFS grib file for variable: v100m at 2021-06-01 00:00:00
    Fetching GFS for 2021-06-01 00:00:00:  81%|████████  | 21/26 [00:07<00:01,  2.82it/s]    Fetching GFS for 2021-06-01 00:00:00:  85%|████████▍ | 22/26 [00:07<00:01,  2.80it/s]                                                                                         2024-07-05 22:00:45.457 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:196 - Fetching GFS grib file for variable: u250 at 2021-06-01 00:00:00
    Fetching GFS for 2021-06-01 00:00:00:  85%|████████▍ | 22/26 [00:07<00:01,  2.80it/s]    Fetching GFS for 2021-06-01 00:00:00:  88%|████████▊ | 23/26 [00:07<00:01,  2.85it/s]                                                                                         2024-07-05 22:00:45.793 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:196 - Fetching GFS grib file for variable: v250 at 2021-06-01 00:00:00
    Fetching GFS for 2021-06-01 00:00:00:  88%|████████▊ | 23/26 [00:07<00:01,  2.85it/s]    Fetching GFS for 2021-06-01 00:00:00:  92%|█████████▏| 24/26 [00:08<00:00,  3.11it/s]                                                                                         2024-07-05 22:00:46.048 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:196 - Fetching GFS grib file for variable: z250 at 2021-06-01 00:00:00
    Fetching GFS for 2021-06-01 00:00:00:  92%|█████████▏| 24/26 [00:08<00:00,  3.11it/s]    Fetching GFS for 2021-06-01 00:00:00:  96%|█████████▌| 25/26 [00:08<00:00,  3.07it/s]                                                                                         2024-07-05 22:00:46.382 | DEBUG    | earth2studio.data.gfs:fetch_gfs_dataarray:196 - Fetching GFS grib file for variable: t250 at 2021-06-01 00:00:00
    Fetching GFS for 2021-06-01 00:00:00:  96%|█████████▌| 25/26 [00:08<00:00,  3.07it/s]    Fetching GFS for 2021-06-01 00:00:00: 100%|██████████| 26/26 [00:08<00:00,  3.22it/s]    Fetching GFS for 2021-06-01 00:00:00: 100%|██████████| 26/26 [00:08<00:00,  2.96it/s]
    2024-07-05 22:00:46.729 | SUCCESS  | earth2studio.run:diagnostic:200 - Fetched data from GFS
    2024-07-05 22:00:46.750 | INFO     | earth2studio.run:diagnostic:231 - Inference starting!
    Running inference:   0%|          | 0/9 [00:00<?, ?it/s]    Running inference:  11%|█         | 1/9 [00:00<00:00,  9.28it/s]    Running inference:  22%|██▏       | 2/9 [00:00<00:00,  7.09it/s]    Running inference:  33%|███▎      | 3/9 [00:00<00:00,  6.57it/s]    Running inference:  44%|████▍     | 4/9 [00:00<00:00,  6.32it/s]    Running inference:  56%|█████▌    | 5/9 [00:00<00:00,  6.17it/s]    Running inference:  67%|██████▋   | 6/9 [00:00<00:00,  6.03it/s]    Running inference:  78%|███████▊  | 7/9 [00:01<00:00,  5.97it/s]    Running inference:  89%|████████▉ | 8/9 [00:01<00:00,  5.93it/s]    Running inference: 100%|██████████| 9/9 [00:01<00:00,  5.88it/s]    Running inference: 100%|██████████| 9/9 [00:01<00:00,  6.15it/s]
    2024-07-05 22:00:48.214 | SUCCESS  | earth2studio.run:diagnostic:245 - Inference complete
    /
     ├── lat (720,) float64
     ├── lead_time (9,) timedelta64[h]
     ├── lon (1440,) float64
     ├── time (1,) datetime64[ns]
     └── tp (1, 9, 720, 1440) float32




.. GENERATED FROM PYTHON SOURCE LINES 103-114

Post Processing
---------------
The last step is to plot the resulting predicted total precipitation. The power of
diagnostic models is that they allow the prediction of any variable from a pre-trained
prognostic model.

.. note::
  The built in workflow will only save the direct outputs of the diagnostic. In this
  example only total precipitation is accessible for plotting. If you wish to save
  outputs of both the prognostic and diagnostic, we recommend writing a custom
  workflow.

.. GENERATED FROM PYTHON SOURCE LINES 116-158

.. code-block:: Python

    from datetime import datetime

    import cartopy.crs as ccrs
    import matplotlib.pyplot as plt
    import numpy as np

    forecast = datetime(2021, 6, 1)
    variable = "tp"
    step = 8  # lead time = 48 hrs

    plt.close("all")
    # Create a Orthographic projection of USA
    projection = ccrs.Orthographic(-100, 40)

    # Create a figure and axes with the specified projection
    fig, ax = plt.subplots(subplot_kw={"projection": projection}, figsize=(10, 6))

    # Plot the field using pcolormesh
    levels = np.arange(0.0, 0.01, 0.001)
    im = ax.contourf(
        io["lon"][:],
        io["lat"][:],
        io[variable][0, step],
        levels,
        transform=ccrs.PlateCarree(),
        vmax=0.01,
        vmin=0.00,
        cmap="terrain",
    )

    # Set title
    ax.set_title(f"{forecast.strftime('%Y-%m-%d')} - Lead time: {6*step}hrs")

    # Add coastlines and gridlines6
    ax.set_extent([220, 340, 20, 70])  # [lat min, lat max, lon min, lon max]
    ax.coastlines()
    ax.gridlines()
    plt.colorbar(
        im, ax=ax, ticks=levels, shrink=0.75, pad=0.04, label="Total precipitation (m)"
    )

    plt.savefig("outputs/02_tp_prediction.jpg")



.. image-sg:: /examples/images/sphx_glr_02_diagnostic_workflow_001.png
   :alt: 2021-06-01 - Lead time: 48hrs
   :srcset: /examples/images/sphx_glr_02_diagnostic_workflow_001.png, /examples/images/sphx_glr_02_diagnostic_workflow_001_2_00x.png 2.00x
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 26.821 seconds)


.. _sphx_glr_download_examples_02_diagnostic_workflow.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: 02_diagnostic_workflow.ipynb <02_diagnostic_workflow.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: 02_diagnostic_workflow.py <02_diagnostic_workflow.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
