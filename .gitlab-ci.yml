stages:
  - pre
  - build
  - lint
  - test
  - report
  - docs

workflow:
   name: $PIPELINE_WORKFLOW_NAME

github-clone:
  stage: pre
  rules:
    - if: $PIPELINE_REPO_SOURCE == "github"
  tags:
  - docker
  extends:
    - .github:pull
  image: bitnami/git

gitlab-clone:
  stage: pre
  rules:
    - if: $PIPELINE_REPO_SOURCE != "github" && $CI_PIPELINE_SOURCE == "merge_request_event"
      when: always
    - if: $PIPELINE_REPO_SOURCE != "github" && $CI_COMMIT_BRANCH == "main" && $CI_PIPELINE_SOURCE == "push"
      when: always
    - if: $PIPELINE_REPO_SOURCE != "github"
      when: manual
    - when: never
  tags:
  - docker
  extends:
    - .gitlab:pull
  image: bitnami/git

build-ci-env:
  stage: build
  needs:
    - job: github-clone
      artifacts: false
      optional: true
    - job: gitlab-clone
      artifacts: false
      optional: true
  tags:
  - docker
  extends:
    - .earth2studio:build-env:base
    - .build-env:cache
  script:
    - make setup-ci

format:
  stage: lint
  needs:
    - job: build-ci-env
      artifacts: false
  tags:
  - docker
  extends:
    - .earth2studio:test:base
    - .lint:cache
  script:
    - ls
    - make format

lint:
  stage: lint
  needs:
    - job: build-ci-env
      artifacts: false
  tags:
  - docker
  extends:
    - .earth2studio:test:base
    - .lint:cache
  script:
    - make interrogate
    - make lint
    - make license

pytest:
  stage: test
  needs:
    - job: format
      artifacts: false
    - job: lint
      artifacts: false
  tags:
  - docker
  extends:
    - .earth2studio:test:base
    - .test:cache
  script:
    - make install
    - make pytest 2>&1 | tee ../pytest.log.full
    - grep -A 9999 "=.*short test summary info.*=" ../pytest.log.full > ../blossom.log
    - rm ../pytest.log.full

coverage:
  stage: report
  needs:
    - job: pytest
      artifacts: true
  tags:
  - docker
  extends:
    - .earth2studio:test:base
    - .coverage:cache
  script:
    - make setup-ci
    - make coverage 2>&1 | tee ../blossom.log
  dependencies:
    - pytest

pages:
  tags:
    - pages
  stage: docs
  script:
  - echo "Publishing docs!"
  - mkdir -p public
  - ls | grep -v public | xargs mv -t public
  publish: public
  artifacts:
    paths:
    - public
  rules:
    - if: $CI_COMMIT_BRANCH == "gl-pages"

include:

  - project: 'modulus/modulus-ci'
    ref: ngeneva/studio-reamped
    file: '.gitlab-ci/earth2studio/common.gitlab-ci.yml'

  - project: 'modulus/modulus-ci'
    ref: ngeneva/studio-reamped
    file: '.gitlab-ci/pull.gitlab-ci.yml'
